{"version":3,"file":"static/js/main.0856595f.js","mappings":"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","sources":["deafultState.js","Components/BoardSquare.js","Components/Row.js","Components/Keyboard.js","words.js","Components/Header.js","Components/ModalComponent.js","Components/Toast.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const defaultState =  [\n  {id: 10, status: \"inactive\", row: 1, value: \"\"},\n  {id: 11, status: \"inactive\", row: 1, value: \"\"},\n  {id: 12, status: \"inactive\", row: 1, value: \"\"},\n  {id: 13, status: \"inactive\", row: 1, value: \"\"},\n  {id: 14, status: \"inactive\", row: 1, value: \"\"},\n  {id: 20, status: \"inactive\", row: 2, value: \"\"},\n  {id: 21, status: \"inactive\", row: 2, value: \"\"},\n  {id: 22, status: \"inactive\", row: 2, value: \"\"},\n  {id: 23, status: \"inactive\", row: 2, value: \"\"},\n  {id: 24, status: \"inactive\", row: 2, value: \"\"},\n  {id: 30, status: \"inactive\", row: 3, value: \"\"},\n  {id: 31, status: \"inactive\", row: 3, value: \"\"},\n  {id: 32, status: \"inactive\", row: 3, value: \"\"},\n  {id: 33, status: \"inactive\", row: 3, value: \"\"},\n  {id: 34, status: \"inactive\", row: 3, value: \"\"},\n  {id: 40, status: \"inactive\", row: 4, value: \"\"},\n  {id: 41, status: \"inactive\", row: 4, value: \"\"},\n  {id: 42, status: \"inactive\", row: 4, value: \"\"},\n  {id: 43, status: \"inactive\", row: 4, value: \"\"},\n  {id: 44, status: \"inactive\", row: 4, value: \"\"},\n  {id: 50, status: \"inactive\", row: 5, value: \"\"},\n  {id: 51, status: \"inactive\", row: 5, value: \"\"},\n  {id: 52, status: \"inactive\", row: 5, value: \"\"},\n  {id: 53, status: \"inactive\", row: 5, value: \"\"},\n  {id: 54, status: \"inactive\", row: 5, value: \"\"},\n  {id: 60, status: \"inactive\", row: 6, value: \"\"},\n  {id: 61, status: \"inactive\", row: 6, value: \"\"},\n  {id: 62, status: \"inactive\", row: 6, value: \"\"},\n  {id: 63, status: \"inactive\", row: 6, value: \"\"},\n  {id: 64, status: \"inactive\", row: 6, value: \"\"},\n]","import { View, Text, StyleSheet, Dimensions } from 'react-native'\nimport React from 'react'\n\nconst windowWidth = Dimensions.get('window').width;\n\nconst BoardSquare = ({row, id, value, status}) => {\n  let squareStyles = [styles.boardSquare];\n  let textStyles = [styles.squareText];\n\n  switch (status) {\n    case 'active':\n      textStyles.push(styles.activeText);\n      squareStyles.push(styles.activeBox);\n      break;\n    case 'close':\n      textStyles.push(styles.closeText)\n      squareStyles.push(styles.closeBox);\n      break;\n    case 'correct':\n      textStyles.push(styles.correctText);\n      squareStyles.push(styles.correctBox);\n      break;\n    case 'incorrect':\n      textStyles.push(styles.incorrectText)\n      squareStyles.push(styles.incorrectBox);\n      break;\n    default:\n      textStyles.push(styles.inactiveText);\n      squareStyles.push(styles.inactiveBox);\n      break;\n  };\n\n  const flattenedBoxStyles = StyleSheet.flatten(squareStyles);\n  const flattenedTextStyles = StyleSheet.flatten(textStyles);\n\n  return (\n    <View \n      row={row}\n      id={id}\n      style={flattenedBoxStyles}\n      key={id}\n      >\n      <Text style={flattenedTextStyles}>\n        {value}\n      </Text>\n    </View>\n  );\n};\n\nexport default BoardSquare\n\nconst styles = StyleSheet.create({\n  boardSquare: {\n    borderWidth: 1,\n    borderColor: \"lightgray\",\n    height: windowWidth < 500 ? 55 : 70,\n    width: windowWidth < 500 ? 55 : 70,\n    margin: 3.5,\n    justifyContent:\"center\",\n    alignItems: \"center\",\n  }, \n  squareText: {\n    color: \"grey\",\n    fontSize: 26,\n    fontWeight:\"bold\"\n  },\n  activeText: {\n    color: \"black\"\n  },\n  incorrectText: {\n    color: \"white\"\n  },\n  correctText: {\n    color:\"white\"\n  },\n  activeBox: {\n    borderColor: \"black\"\n    // backgroundColor: \"black\",\n  },\n  inactiveBox: {\n    borderColor: \"lightgray\",\n  },\n  incorrectBox: {\n    backgroundColor: \"lightgray\"\n  },\n  inactiveText: {\n    color: \"white\"\n  },\n  correctBox: {\n    backgroundColor: \"#4b7774\",\n    borderColor:\"#4b7774\"\n  },\n  closeText: {\n    color: \"white\"\n  },\n  closeBox: {\n    borderColor: \"#f2c41d\",\n    backgroundColor: \"#f2c41d\"\n  }\n});","import { StyleSheet, View, Text } from 'react-native';\nimport React from 'react';\nimport BoardSquare from './BoardSquare';\n\nconst Row = ({squareData, accountForDoubles}) => {\n  let cleanedSquareData = accountForDoubles(squareData)\n\n  let squares = cleanedSquareData.map(square => {\n    return (\n      <BoardSquare\n        status={square.status}\n        row={squareData.row}\n        id={square.id}\n        style={styles.boardSquare }\n        key={square.id}\n        value = {square.value}\n      />\n    );\n  });\n\n  return (\n    <View style={styles.row}>\n      {squares}\n    </View>\n  );\n};\n\nexport default Row;\n\nconst styles = StyleSheet.create({ \n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\n\nconst Keyboard = ({disableKeyboard, updateGuess, submitGuess, backspace, guessedLetters, closeLetters, correctLetters }) => {\n  const handleLetterKeyPress = (letter) => {\n    if (!disableKeyboard){\n      updateGuess(letter);\n    }\n  };\n\n  const checkIfGuessed = (letter) => {\n    if (correctLetters.includes(letter)) {\n      return [StyleSheet.flatten([styles.button, styles.correctLetterButton]),\n              StyleSheet.flatten([styles.buttonText, styles.guessedText]) ];\n\n    } else if (closeLetters.includes(letter)) {\n      return [StyleSheet.flatten([styles.button, styles.closeLetterButton]),\n              StyleSheet.flatten([styles.buttonText, styles.guessedText]) ];\n      \n    } else if (guessedLetters.includes(letter)) {\n      return [StyleSheet.flatten([styles.button, styles.guessedLetterButton]),\n              StyleSheet.flatten([styles.buttonText, styles.guessedText])];\n    } else {\n      return [styles.button, styles.buttonText]\n    }\n  };\n\n  const row1 = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'].map((letter) => {\n    const keyStyle = checkIfGuessed(letter)[0];\n    const textStyle = checkIfGuessed(letter)[1];\n    return (\n      <TouchableOpacity\n        key={letter}\n        style={keyStyle}\n        onPress={() => handleLetterKeyPress(letter)}\n      >\n        <Text style={textStyle}>{letter}</Text>\n      </TouchableOpacity>\n    )\n  });\n\n  const row2 = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'].map((letter) => {\n    const textStyle = checkIfGuessed(letter)[1];\n    const keyStyle = checkIfGuessed(letter)[0];\n    return (  \n      <TouchableOpacity\n        key={letter}\n        style={keyStyle}\n        onPress={() => handleLetterKeyPress(letter)}\n      >\n        <Text style={textStyle}>{letter}</Text>\n      </TouchableOpacity>\n    )\n  });\n\n  const row3 = ['Z', 'X', 'C', 'V', 'B', 'N', 'M'].map((letter) => {\n    const textStyle = checkIfGuessed(letter)[1]\n    const keyStyle = checkIfGuessed(letter)[0]\n    return (\n      <TouchableOpacity\n        key={letter}\n        style={keyStyle}\n        onPress={() => handleLetterKeyPress(letter)}\n      >\n        <Text style={textStyle}>{letter}</Text>\n      </TouchableOpacity>\n    )\n  });\n\n  const specialButtonsStyle = StyleSheet.flatten([styles.button, styles.specialButton])\n\n  return (\n    <View style={styles.keyboardContainer}>\n      <View style={styles.keyRow}>{row1}</View>\n        <View style={styles.keyRow}>{row2}</View>\n      <View style={styles.specialRow}>\n        <TouchableOpacity style={specialButtonsStyle} onPress={() => submitGuess()}>\n          <Text>Submit</Text>\n        </TouchableOpacity>\n        <View style={styles.keyRow}>{row3}</View>\n        <TouchableOpacity style={specialButtonsStyle} onPress={() => backspace()}>\n          <Text>Back</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  keyboardContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  keyRow: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  specialRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  button: {\n    marginHorizontal: 3,\n    padding: 10,\n    paddingTop: 15,\n    paddingBottom: 15,\n    backgroundColor: 'lightgray',\n    borderRadius: 5,\n  },\n  buttonText: {\n    fontSize: 15,\n    color: \"black\",\n    fontWeight: \"500\"\n  },\n  guessedText: {\n    color: \"white\"\n  },\n  specialButton: {\n    padding: 5.5,\n    height: 48,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, \n  guessedLetterButton: {\n    backgroundColor: \"grey\"\n  }, \n  closeLetterButton: {\n    borderColor: \"#f2c41d\",\n    backgroundColor: \"#f2c41d\"\n  },\n  correctLetterButton: {\n    backgroundColor: \"#4b7774\",\n    borderColor:\"#4b7774\"\n  }\n});\n\nexport default Keyboard;","const unformatedWords = [\n  \"about\",\n  \"above\",\n  \"actor\",\n  \"admit\",\n  \"adopt\",\n  \"adult\",\n  \"after\",\n  \"soaps\",\n  \"again\",\n  \"agree\",\n  \"ahead\",\n  \"aisle\",\n  \"alarm\",\n  \"album\",\n  \"alive\",\n  \"allow\",\n  \"alone\",\n  \"spear\",\n  \"along\",\n  \"alter\",\n  \"among\",\n  \"sands\",\n  \"angel\",\n  \"ninja\",\n  \"anger\",\n  \"ankle\",\n  \"apple\",\n  \"apply\",\n  \"areas\",\n  \"arena\",\n  \"argue\",\n  \"arise\",\n  \"armed\",\n  \"armor\",\n  \"array\",\n  \"arrow\",\n  \"aside\",\n  \"asked\",\n  \"asset\",\n  \"audio\",\n  \"audit\",\n  \"autos\",\n  \"avoid\",\n  \"await\",\n  \"awake\",\n  \"award\",\n  \"aware\",\n  \"awful\",\n  \"awoke\",\n  \"axial\",\n  \"axiom\",\n  \"azure\",\n  \"bacon\",\n  \"badge\",\n  \"baker\",\n  \"baldy\",\n  \"based\",\n  \"balls\",\n  \"banjo\",\n  \"banks\",\n  \"barge\",\n  \"barks\",\n  \"basic\",\n  \"basin\",\n  \"basis\",\n  \"basil\",\n  \"batch\",\n  \"baths\",\n  \"beach\",\n  \"beads\",\n  \"beams\",\n  \"beans\",\n  \"beard\",\n  \"bears\",\n  \"beast\",\n  \"beats\",\n  \"beech\",\n  \"beefs\",\n  \"beers\",\n  \"beets\",\n  \"begin\",\n  \"begun\",\n  \"being\",\n  \"belay\",\n  \"belly\",\n  \"below\",\n  \"bench\",\n  \"bends\",\n  \"bento\",\n  \"berth\",\n  \"beset\",\n  \"betas\",\n  \"betel\",\n  \"bible\",\n  \"bided\",\n  \"bides\",\n  \"bight\",\n  \"bigot\",\n  \"bikes\",\n  \"bilge\",\n  \"bills\",\n  \"billy\",\n  \"bingo\",\n  \"biome\",\n  \"bison\",\n  \"bites\",\n  \"black\",\n  \"blade\",\n  \"blank\",\n  \"blast\",\n  \"blaze\",\n  \"bleed\",\n  \"blend\",\n  \"bless\",\n  \"blimp\",\n  \"blind\",\n  \"blink\",\n  \"bliss\",\n  \"block\",\n  \"blogs\",\n  \"blood\",\n  \"bloom\",\n  \"blown\",\n  \"blues\",\n  \"bluff\",\n  \"board\",\n  \"boast\",\n  \"boats\",\n  \"bobby\",\n  \"boils\",\n  \"bolts\",\n  \"bonds\",\n  \"bones\",\n  \"bonus\",\n  \"books\",\n  \"booms\",\n  \"boots\",\n  \"booze\",\n  \"bored\",\n  \"borne\",\n  \"bosom\",\n  \"bound\",\n  \"bouts\",\n  \"boxed\",\n  \"boxer\",\n  \"boxom\",\n  \"boxes\",\n  \"brace\",\n  \"brake\",\n  \"brand\",\n  \"brave\",\n  \"brawl\",\n  \"bread\",\n  \"break\",\n  \"bream\",\n  \"breed\",\n  \"brews\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"brief\",\n  \"brims\",\n  \"bring\",\n  \"brisk\",\n  \"broad\",\n  \"broil\",\n  \"broke\",\n  \"brood\",\n  \"brook\",\n  \"broth\",\n  \"brown\",\n  \"brows\",\n  \"brush\",\n  \"brute\",\n  \"bucks\",\n  \"buddy\",\n  \"budge\",\n  \"buggy\",\n  \"bugle\",\n  \"build\",\n  \"bulbs\",\n  \"bulge\",\n  \"bulks\",\n  \"bulls\",\n  \"bully\",\n  \"bumps\",\n  \"bunch\",\n  \"bunny\",\n  \"bunts\",\n  \"burly\",\n  \"burns\",\n  \"burnt\",\n  \"burps\",\n  \"burst\",\n  \"buses\",\n  \"bushy\",\n  \"busts\",\n  \"butch\",\n  \"butte\",\n  \"butts\",\n  \"buyer\",\n  \"bylaw\",\n  \"bytes\",\n  \"cabin\",\n  \"cable\",\n  \"cacao\",\n  \"cache\",\n  \"caddy\",\n  \"cadet\",\n  \"cafes\",\n  \"caged\",\n  \"cages\",\n  \"cagey\",\n  \"caked\",\n  \"cakes\",\n  \"calfs\",\n  \"calls\",\n  \"calms\",\n  \"calve\",\n  \"camel\",\n  \"cameo\",\n  \"camps\",\n  \"canal\",\n  \"candy\",\n  \"caned\",\n  \"canes\",\n  \"canon\",\n  \"canto\",\n  \"caper\",\n  \"capes\",\n  \"capon\",\n  \"carat\",\n  \"cards\",\n  \"cared\",\n  \"carer\",\n  \"cares\",\n  \"cargo\",\n  \"carol\",\n  \"carve\",\n  \"cased\",\n  \"cases\",\n  \"catch\",\n  \"cater\",\n  \"cause\",\n  \"caves\",\n  \"cease\",\n  \"cedar\",\n  \"ceded\",\n  \"celeb\",\n  \"cello\",\n  \"cells\",\n  \"cents\",\n  \"chafe\",\n  \"chain\",\n  \"chair\",\n  \"chalk\",\n  \"champ\",\n  \"chant\",\n  \"chaos\",\n  \"chaps\",\n  \"chard\",\n  \"charm\",\n  \"chars\",\n  \"chart\",\n  \"chase\",\n  \"chasm\",\n  \"cheap\",\n  \"cheat\",\n  \"check\",\n  \"cheek\",\n  \"cheer\",\n  \"chefs\",\n  \"chess\",\n  \"chest\",\n  \"chews\",\n  \"chewy\",\n  \"chick\",\n  \"chief\",\n  \"child\",\n  \"chile\",\n  \"chili\",\n  \"chime\",\n  \"chimp\",\n  \"china\",\n  \"chine\",\n  \"chins\",\n  \"chips\",\n  \"chive\",\n  \"chock\",\n  \"choir\",\n  \"choke\",\n  \"chomp\",\n  \"chops\",\n  \"chord\",\n  \"chore\",\n  \"chose\",\n  \"chows\",\n  \"chuck\",\n  \"chugs\",\n  \"chump\",\n  \"chums\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cigar\",\n  \"cinch\",\n  \"circa\",\n  \"cited\",\n  \"cites\",\n  \"civet\",\n  \"civic\",\n  \"civil\",\n  \"civvy\",\n  \"clack\",\n  \"claim\",\n  \"clamp\",\n  \"clams\",\n  \"clang\",\n  \"clank\",\n  \"claps\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clave\",\n  \"claws\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"clefs\",\n  \"cleft\",\n  \"clerk\",\n  \"click\",\n  \"cliff\",\n  \"climb\",\n  \"clime\",\n  \"cline\",\n  \"cling\",\n  \"clink\",\n  \"clips\",\n  \"cloak\",\n  \"clock\",\n  \"clods\",\n  \"clogs\",\n  \"clomp\",\n  \"clone\",\n  \"close\",\n  \"cloth\",\n  \"clots\",\n  \"cloud\",\n  \"clout\",\n  \"clove\",\n  \"clown\",\n  \"clubs\",\n  \"cluck\",\n  \"clued\",\n  \"clues\",\n  \"clump\",\n  \"clunk\",\n  \"coach\",\n  \"coals\",\n  \"coast\",\n  \"coati\",\n  \"coats\",\n  \"cobra\",\n  \"cocks\",\n  \"cocoa\",\n  \"codas\",\n  \"coded\",\n  \"coder\",\n  \"codes\",\n  \"codon\",\n  \"coeds\",\n  \"cohos\",\n  \"coils\",\n  \"coins\",\n  \"colas\",\n  \"colds\",\n  \"coles\",\n  \"colic\",\n  \"colin\",\n  \"colon\",\n  \"color\",\n  \"colts\",\n  \"comas\",\n  \"combo\",\n  \"combs\",\n  \"comer\",\n  \"comes\",\n  \"comet\",\n  \"comic\",\n  \"comma\",\n  \"conch\",\n  \"condo\",\n  \"coned\",\n  \"cones\",\n  \"conga\",\n  \"congo\",\n  \"conic\",\n  \"conks\",\n  \"cooed\",\n  \"cooks\",\n  \"cools\",\n  \"coops\",\n  \"coped\",\n  \"copes\",\n  \"copra\",\n  \"coral\",\n  \"cords\",\n  \"cored\",\n  \"corer\",\n  \"cores\",\n  \"corgi\",\n  \"corks\",\n  \"corky\",\n  \"corms\",\n  \"corns\",\n  \"cornu\",\n  \"corny\",\n  \"corps\",\n  \"costs\",\n  \"cotta\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"count\",\n  \"coupe\",\n  \"coups\",\n  \"court\",\n  \"coven\",\n  \"cover\",\n  \"coves\",\n  \"covet\",\n  \"covey\",\n  \"cowed\",\n  \"cower\",\n  \"cowls\",\n  \"crabs\",\n  \"crack\",\n  \"craft\",\n  \"crags\",\n  \"cramp\",\n  \"crams\",\n  \"crane\",\n  \"crank\",\n  \"crape\",\n  \"craps\",\n  \"crash\",\n  \"crass\",\n  \"crate\",\n  \"crave\",\n  \"crawl\",\n  \"craws\",\n  \"craze\",\n  \"crazy\",\n  \"creak\",\n  \"cream\",\n  \"credo\",\n  \"creed\",\n  \"creek\",\n  \"creel\",\n  \"creep\",\n  \"creme\",\n  \"crepe\",\n  \"crept\",\n  \"cress\",\n  \"crest\",\n  \"crews\",\n  \"cribs\",\n  \"crick\",\n  \"cried\",\n  \"crier\",\n  \"cries\",\n  \"crime\",\n  \"crimp\",\n  \"crisp\",\n  \"crits\",\n  \"croak\",\n  \"crock\",\n  \"crocs\",\n  \"croft\",\n  \"crone\",\n  \"crony\",\n  \"crook\",\n  \"croon\",\n  \"crops\",\n  \"cross\",\n  \"croup\",\n  \"crowd\",\n  \"crown\",\n  \"crows\",\n  \"crude\",\n  \"cruel\",\n  \"cruet\",\n  \"crumb\",\n  \"cruse\",\n  \"crush\",\n  \"crust\",\n  \"crypt\",\n  \"cubby\",\n  \"cubed\",\n  \"cubes\",\n  \"cubic\",\n  \"cubit\",\n  \"cuffs\",\n  \"culls\",\n  \"culpa\",\n  \"cults\",\n  \"cumin\",\n  \"cupid\",\n  \"curbs\",\n  \"curds\",\n  \"cured\",\n  \"cures\",\n  \"curia\",\n  \"curio\",\n  \"curls\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"curve\",\n  \"curvy\",\n  \"cusps\",\n  \"cuter\",\n  \"cutie\",\n  \"cutis\",\n  \"cutup\",\n  \"cycad\",\n  \"cycle\",\n  \"cyclo\",\n  \"cynic\",\n  \"cysts\",\n  \"czars\",\n  \"daddy\",\n  \"dados\",\n  \"daffy\",\n  \"daily\",\n  \"dairy\",\n  \"daisy\",\n  \"dales\",\n  \"dames\",\n  \"damns\",\n  \"damps\",\n  \"dance\",\n  \"dandy\",\n  \"dared\",\n  \"dares\",\n  \"darks\",\n  \"darns\",\n  \"darts\",\n  \"dated\",\n  \"dater\",\n  \"dates\",\n  \"datum\",\n  \"daubs\",\n  \"daunt\",\n  \"davit\",\n  \"dawns\",\n  \"dazed\",\n  \"deals\",\n  \"dealt\",\n  \"deans\",\n  \"dears\",\n  \"deary\",\n  \"death\",\n  \"debit\",\n  \"debts\",\n  \"debug\",\n  \"debut\",\n  \"decaf\",\n  \"decal\",\n  \"decay\",\n  \"decks\",\n  \"decor\",\n  \"decoy\",\n  \"decry\",\n  \"deeds\",\n  \"deems\",\n  \"deeps\",\n  \"deers\",\n  \"defer\",\n  \"deign\",\n  \"deist\",\n  \"deity\",\n  \"delay\",\n  \"delft\",\n  \"delis\",\n  \"dells\",\n  \"delta\",\n  \"delve\",\n  \"demon\",\n  \"demur\",\n  \"denim\",\n  \"dense\",\n  \"dents\",\n  \"depot\",\n  \"depth\",\n  \"derby\",\n  \"desks\",\n  \"deter\",\n  \"detox\",\n  \"deuce\",\n  \"devil\",\n  \"dials\",\n  \"diary\",\n  \"diced\",\n  \"dices\",\n  \"dicey\",\n  \"dicky\",\n  \"dicta\",\n  \"diets\",\n  \"digit\",\n  \"diked\",\n  \"dikes\",\n  \"dills\",\n  \"dilly\",\n  \"dimer\",\n  \"dimes\",\n  \"dimly\",\n  \"dinar\",\n  \"dined\",\n  \"diner\",\n  \"dines\",\n  \"dingo\",\n  \"dings\",\n  \"dingy\",\n  \"dinks\",\n  \"dinky\",\n  \"dinos\",\n  \"dippy\",\n  \"direr\",\n  \"dirge\",\n  \"dirty\",\n  \"disco\",\n  \"discs\",\n  \"dishy\",\n  \"disks\",\n  \"ditch\",\n  \"ditsy\",\n  \"ditto\",\n  \"ditty\",\n  \"ditzy\",\n  \"divas\",\n  \"dived\",\n  \"diver\",\n  \"dives\",\n  \"divot\",\n  \"divvy\",\n  \"docks\",\n  \"dodge\",\n  \"dodgy\",\n  \"dodos\",\n  \"doers\",\n  \"doffs\",\n  \"doges\",\n  \"doggy\",\n  \"dogma\",\n  \"doing\",\n  \"doled\",\n  \"doles\",\n  \"dolls\",\n  \"dolly\",\n  \"dolor\",\n  \"dolts\",\n  \"domed\",\n  \"domes\",\n  \"donee\",\n  \"dongs\",\n  \"donna\",\n  \"donor\",\n  \"donut\",\n  \"dooms\",\n  \"doors\",\n  \"doozy\",\n  \"doped\",\n  \"dopes\",\n  \"dopey\",\n  \"dorks\",\n  \"dorky\",\n  \"dorms\",\n  \"dosas\",\n  \"dosed\",\n  \"doses\",\n  \"doted\",\n  \"dotes\",\n  \"dotty\",\n  \"doubt\",\n  \"dough\",\n  \"doula\",\n  \"douse\",\n  \"doves\",\n  \"dowdy\",\n  \"dowel\",\n  \"dower\",\n  \"downs\",\n  \"downy\",\n  \"dowry\",\n  \"dowse\",\n  \"doyen\",\n  \"dozed\",\n  \"dozen\",\n  \"dozer\",\n  \"dozes\",\n  \"drabs\",\n  \"draft\",\n  \"drags\",\n  \"drain\",\n  \"drake\",\n  \"drama\",\n  \"drams\",\n  \"drank\",\n  \"drape\",\n  \"drawl\",\n  \"drawn\",\n  \"draws\",\n  \"drays\",\n  \"dread\",\n  \"dream\",\n  \"dregs\",\n  \"dress\",\n  \"dribs\",\n  \"dried\",\n  \"drier\",\n  \"dries\",\n  \"drift\",\n  \"drill\",\n  \"drily\",\n  \"drink\",\n  \"drips\",\n  \"drive\",\n  \"droid\",\n  \"droll\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drops\",\n  \"dross\",\n  \"drove\",\n  \"drown\",\n  \"drugs\",\n  \"druid\",\n  \"drums\",\n  \"drunk\",\n  \"drupe\",\n  \"dryad\",\n  \"dryer\",\n  \"dryly\",\n  \"duals\",\n  \"ducal\",\n  \"ducat\",\n  \"duchy\",\n  \"ducks\",\n  \"ducky\",\n  \"ducts\",\n  \"dudes\",\n  \"duels\",\n  \"duets\",\n  \"dulls\",\n  \"dully\",\n  \"dulse\",\n  \"dumbo\",\n  \"dummy\",\n  \"dumps\",\n  \"dumpy\",\n  \"dunce\",\n  \"dunes\",\n  \"dunks\",\n  \"duomo\",\n  \"duped\",\n  \"dupes\",\n  \"durum\",\n  \"dusks\",\n  \"dusky\",\n  \"dusts\",\n  \"dusty\",\n  \"dutch\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwell\",\n  \"dwelt\",\n  \"dyads\",\n  \"dyers\",\n  \"dying\",\n  \"eagle\",\n  \"eared\",\n  \"earls\",\n  \"early\",\n  \"earns\",\n  \"earth\",\n  \"eased\",\n  \"easel\",\n  \"easer\",\n  \"eases\",\n  \"eaten\",\n  \"eater\",\n  \"ebbed\",\n  \"ebony\",\n  \"ebook\",\n  \"echos\",\n  \"edged\",\n  \"edger\",\n  \"edges\",\n  \"edict\",\n  \"edify\",\n  \"edits\",\n  \"eejit\",\n  \"eerie\",\n  \"egged\",\n  \"egret\",\n  \"eider\",\n  \"eidos\",\n  \"eight\",\n  \"eject\",\n  \"elbow\",\n  \"elder\",\n  \"elect\",\n  \"elegy\",\n  \"elide\",\n  \"elite\",\n  \"elope\",\n  \"elude\",\n  \"elute\",\n  \"elven\",\n  \"elves\",\n  \"email\",\n  \"embed\",\n  \"ember\",\n  \"emcee\",\n  \"emits\",\n  \"emote\",\n  \"empty\",\n  \"enact\",\n  \"ended\",\n  \"endow\",\n  \"enema\",\n  \"enemy\",\n  \"enjoy\",\n  \"enrol\",\n  \"ensue\",\n  \"enter\",\n  \"entry\",\n  \"envoy\",\n  \"epics\",\n  \"epoch\",\n  \"epoxy\",\n  \"equal\",\n  \"equip\",\n  \"erase\",\n  \"erect\",\n  \"ergot\",\n  \"erode\",\n  \"erred\",\n  \"error\",\n  \"erupt\",\n  \"essay\",\n  \"ether\",\n  \"ethic\",\n  \"ethos\",\n  \"ethyl\",\n  \"etude\",\n  \"euros\",\n  \"evade\",\n  \"evens\",\n  \"event\",\n  \"every\",\n  \"evict\",\n  \"evils\",\n  \"evoke\",\n  \"exact\",\n  \"exalt\",\n  \"exams\",\n  \"excel\",\n  \"yells\",\n  \"execs\",\n  \"hello\",\n  \"spook\",\n  \"exert\",\n  'sooth',\n  \"exile\",\n  \"exist\",\n  \"exits\",\n  \"expat\",\n  \"expel\",\n  \"expos\",\n  \"exude\",\n  \"exult\",\n  \"exurb\",\n  \"eying\",\n  \"eyrie\",\n  \"faces\",\n  \"facto\",\n  \"facts\",\n  \"faded\",\n  \"fades\",\n  \"fails\",\n  \"faint\",\n  \"faire\",\n  \"fairs\",\n  \"fairy\",\n  \"faith\",\n  \"faked\",\n  \"faker\",\n  \"fakes\",\n  \"fakir\",\n  \"falls\",\n  \"false\",\n  \"famed\",\n  \"fames\",\n  \"fancy\",\n  \"fangs\",\n  \"fanny\",\n  \"farad\",\n  \"belts\",\n  \"farce\",\n  \"fared\",\n  \"fares\",\n  \"farms\",\n  \"fasts\",\n  \"fatal\",\n  \"fated\",\n  \"fates\",\n  \"fatly\",\n  \"fatso\",\n  \"fatty\",\n  \"fatwa\",\n  \"fault\",\n  \"fauna\",\n  \"fauns\",\n  \"faves\",\n  \"favor\",\n  \"fawns\",\n  \"faxed\",\n  \"faxes\",\n  \"fazed\",\n  \"fazes\",\n  \"fears\",\n  \"feast\",\n  \"feats\",\n  \"fecal\",\n  \"feces\",\n  \"feeds\",\n  \"feels\",\n  \"feign\",\n  \"feint\",\n  \"felon\",\n  \"felts\",\n  \"femme\",\n  \"femur\",\n  \"fence\",\n  \"fends\",\n  \"feral\",\n  \"ferns\",\n  \"ferny\",\n  \"ferry\",\n  \"fests\",\n  \"fetch\",\n  \"feted\",\n  \"fetes\",\n  \"fetid\",\n  \"fetus\",\n  \"feuds\",\n  \"fever\",\n  \"fewer\",\n  \"fiats\",\n  \"fiber\",\n  \"fiche\",\n  \"fiefs\",\n  \"field\",\n  \"fiend\",\n  \"fiery\",\n  \"fifed\",\n  \"fifes\",\n  \"fifth\",\n  \"fifty\",\n  \"fight\",\n  \"filch\",\n  \"filed\",\n  \"filer\",\n  \"files\",\n  \"fills\",\n  \"filly\",\n  \"films\",\n  \"filmy\",\n  \"filth\",\n  \"final\",\n  \"finch\",\n  \"finds\",\n  \"fined\",\n  \"finer\",\n  \"fines\",\n  \"finis\",\n  \"finks\",\n  \"fired\",\n  \"firer\",\n  \"fires\",\n  \"firms\",\n  \"first\",\n  \"fishy\",\n  \"fists\",\n  \"fitly\",\n  \"fiver\",\n  \"fives\",\n  \"fixed\",\n  \"fixer\",\n  \"fixes\",\n  \"fjord\",\n  \"flack\",\n  \"flags\",\n  \"flail\",\n  \"flair\",\n  \"flake\",\n  \"flaky\",\n  \"flame\",\n  \"flank\",\n  \"flaps\",\n  \"flare\",\n  \"flash\",\n  \"flask\",\n  \"flats\",\n  \"flaws\",\n  \"flays\",\n  \"fleas\",\n  \"fleck\",\n  \"flees\",\n  \"fleet\",\n  \"flesh\",\n  \"flick\",\n  \"flier\",\n  \"flies\",\n  \"fling\",\n  \"flint\",\n  \"flips\",\n  \"flirt\",\n  \"flits\",\n  \"float\",\n  \"flock\",\n  \"flogs\",\n  \"flood\",\n  \"floor\",\n  \"flops\",\n  \"flora\",\n  \"floss\",\n  \"flour\",\n  \"flout\",\n  \"flown\",\n  \"flows\",\n  \"fluor\",\n  \"flute\",\n  \"flyby\",\n  \"flyer\",\n  \"foals\",\n  \"foams\",\n  \"foamy\",\n  \"focal\",\n  \"focus\",\n  \"foils\",\n  \"foist\",\n  \"folks\",\n  \"fonds\",\n  \"fonts\",\n  \"foods\",\n  \"fools\",\n  \"footy\",\n  \"foray\",\n  \"force\",\n  \"fordo\",\n  \"fords\",\n  \"fores\",\n  \"forge\",\n  \"forgo\",\n  \"forks\",\n  \"forms\",\n  \"forts\",\n  \"forty\",\n  \"forum\",\n  \"fouls\",\n  \"found\",\n  \"fount\",\n  \"fours\",\n  \"foyer\",\n  \"frail\",\n  \"frame\",\n  \"franc\",\n  \"frank\",\n  \"frats\",\n  \"fraud\",\n  \"frays\",\n  \"freak\",\n  \"freed\",\n  \"freer\",\n  \"frees\",\n  \"fresh\",\n  \"frets\",\n  \"friar\",\n  \"fried\",\n  \"frier\",\n  \"fries\",\n  \"frigs\",\n  \"frill\",\n  \"frisk\",\n  \"frizz\",\n  \"frock\",\n  \"frogs\",\n  \"frond\",\n  \"front\",\n  \"frosh\",\n  \"frost\",\n  \"froth\",\n  \"frown\",\n  \"froze\",\n  \"fruit\",\n  \"fryer\",\n  \"fucks\",\n  \"fudge\",\n  \"fuels\",\n  \"fugal\",\n  \"fuggy\",\n  \"fugue\",\n  \"fulls\",\n  \"fully\",\n  \"fumed\",\n  \"fumes\",\n  \"funds\",\n  \"fungi\",\n  \"funky\",\n  \"funny\",\n  \"furls\",\n  \"furor\",\n  \"furry\",\n  \"furze\",\n  \"fusee\",\n  \"fuses\",\n  \"fussy\",\n  \"fusty\",\n  \"futon\",\n  \"fuzed\",\n  \"fuzes\",\n  \"fuzzy\",\n  \"gabby\",\n  \"gable\",\n  \"gaffe\",\n  \"gaffs\",\n  \"gaged\",\n  \"gages\",\n  \"gaily\",\n  \"gains\",\n  \"gaita\",\n  \"gaits\",\n  \"galas\",\n  \"gales\",\n  \"galls\",\n  \"gally\",\n  \"galop\",\n  \"gamed\",\n  \"gamer\",\n  \"games\",\n  \"gamey\",\n  \"gamic\",\n  \"gamin\",\n  \"gamma\",\n  \"gammy\",\n  \"gamut\",\n  \"ganja\",\n  \"gaped\",\n  \"gaper\",\n  \"gapes\",\n  \"garbs\",\n  \"gases\",\n  \"gasps\",\n  \"gassy\",\n  \"gated\",\n  \"gates\",\n  \"gator\",\n  \"gaudy\",\n  \"gauge\",\n  \"gault\",\n  \"gaunt\",\n  \"gauss\",\n  \"gauze\",\n  \"gauzy\",\n  \"gavel\",\n  \"gavot\",\n  \"gawks\",\n  \"gawky\",\n  \"gayer\",\n  \"gazed\",\n  \"gazer\",\n  \"gazes\",\n  \"gears\",\n  \"gecko\",\n  \"geeks\",\n  \"geese\",\n  \"geest\",\n  \"gelds\",\n  \"gelid\",\n  \"gemma\",\n  \"gemmy\",\n  \"genes\",\n  \"genie\",\n  \"genii\",\n  \"genre\",\n  \"gents\",\n  \"genus\",\n  \"geode\",\n  \"germs\",\n  \"getup\",\n  \"ghast\",\n  \"ghats\",\n  \"ghazi\",\n  \"ghees\",\n  \"ghost\",\n  \"ghoul\",\n  \"giant\",\n  \"gibed\",\n  \"giber\",\n  \"gibes\",\n  \"giddy\",\n  \"gifts\",\n  \"gigas\",\n  \"gilds\",\n  \"gills\",\n  \"gilly\",\n  \"gilts\",\n  \"gimme\",\n  \"gimps\",\n  \"gimpy\",\n  \"ginks\",\n  \"gipsy\",\n  \"girds\",\n  \"girls\",\n  \"girly\",\n  \"girth\",\n  \"girts\",\n  \"gismo\",\n  \"gists\",\n  \"given\",\n  \"giver\",\n  \"gives\",\n  \"gizmo\",\n  \"glace\",\n  \"glade\",\n  \"glads\",\n  \"glady\",\n  \"glair\",\n  \"glams\",\n  \"gland\",\n  \"glans\",\n  \"glare\",\n  \"glary\",\n  \"glass\",\n  \"glaze\",\n  \"glazy\",\n  \"gleam\",\n  \"glean\",\n  \"glees\",\n  \"glens\",\n  \"glide\",\n  \"glint\",\n  \"glitz\",\n  \"globe\",\n  \"globs\",\n  \"gloom\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glows\",\n  \"glued\",\n  \"gluer\",\n  \"glues\",\n  \"gluey\",\n  \"glugs\",\n  \"glumly\",\n  \"gluts\",\n  \"glyph\",\n  \"gnarl\",\n  \"gnars\",\n  \"gnash\",\n  \"gnats\",\n  \"gnawn\",\n  \"gnaws\",\n  \"gnome\",\n  \"goads\",\n  \"goals\",\n  \"goats\",\n  \"godly\",\n  \"goers\",\n  \"gofor\",\n  \"going\",\n  \"golds\",\n  \"golem\",\n  \"gonad\",\n  \"gongs\",\n  \"gonna\",\n  \"goods\",\n  \"goody\",\n  \"gooey\",\n  \"goofs\",\n  \"goofy\",\n  \"gooks\",\n  \"goons\",\n  \"goose\",\n  \"gored\",\n  \"gores\",\n  \"gorge\",\n  \"gorse\",\n  \"gorys\",\n  \"gosh\",\n  \"goths\",\n  \"gouda\",\n  \"gouge\",\n  \"gourd\",\n  \"gouts\",\n  \"gouty\",\n  \"gowns\",\n  \"grabs\",\n  \"grace\",\n  \"grade\",\n  \"grads\",\n  \"graft\",\n  \"grail\",\n  \"grain\",\n  \"grams\",\n  \"grand\",\n  \"grans\",\n  \"grant\",\n  \"grape\",\n  \"graph\",\n  \"grasp\",\n  \"grass\",\n  \"grate\",\n  \"grave\",\n  \"gravy\",\n  \"grays\",\n  \"graze\",\n  \"great\",\n  \"grebe\",\n  \"greed\",\n  \"greek\",\n  \"green\",\n  \"greet\",\n  \"greed\",\n  \"greek\",\n  \"green\",\n  \"greet\",\n  \"grids\",\n  \"grief\",\n  \"grill\",\n  \"grimy\",\n  \"grind\",\n  \"grins\",\n  \"gripe\",\n  \"grips\",\n  \"grist\",\n  \"grits\",\n  \"groan\",\n  \"groin\",\n  \"groom\",\n  \"grope\",\n  \"gross\",\n  \"group\",\n  \"grout\",\n  \"grove\",\n  \"growl\",\n  \"grown\",\n  \"boost\",\n  \"grows\",\n  \"grubs\",\n  \"gruel\",\n  \"gruff\",\n  \"grump\",\n  \"grunt\",\n  \"guano\",\n  \"guard\",\n  \"guava\",\n  \"guess\",\n  \"guest\",\n  \"guide\",\n  \"guild\",\n  \"guile\",\n  \"guilt\",\n  \"guiro\",\n  \"gulch\",\n  \"gulfs\",\n  \"gulls\",\n  \"spank\",\n  \"gully\",\n  \"gulps\",\n  \"gulpy\",\n  \"gumbo\",\n  \"gummy\",\n  \"gunny\",\n  \"guppy\",\n  \"gurus\",\n  \"gushy\",\n  \"spoil\",\n  \"gusto\",\n  \"gusts\",\n  \"gusty\",\n  \"gutsy\",\n  \"gutty\",\n  \"guyed\",\n  \"gypsy\",\n  \"gyral\",\n  \"gyred\",\n  \"gyres\",\n  \"gyros\",\n  \"gyrus\",\n  \"habit\",\n  \"hacks\",\n  \"hafts\",\n  \"haggy\",\n  \"haiku\",\n  \"hails\",\n  \"hairs\",\n  \"hairy\",\n  \"hakes\",\n  \"haled\",\n  \"haler\",\n  \"hales\",\n  \"halls\",\n  \"halos\",\n  \"halts\",\n  \"halve\",\n  \"hammy\",\n  \"hands\",\n  \"handy\",\n  \"hangs\",\n  \"hanks\",\n  \"hanky\",\n  \"hants\",\n  \"haole\",\n  \"haply\",\n  \"happy\",\n  \"hardy\",\n  \"hards\",\n  \"hardy\",\n  \"harem\",\n  \"hares\",\n  \"harks\",\n  \"harms\",\n  \"harps\",\n  \"harry\",\n  \"harsh\",\n  \"harts\",\n  \"hasps\",\n  \"haste\",\n  \"hasty\",\n  \"hatch\",\n  \"hated\",\n  \"hater\",\n  \"hates\",\n  \"hauls\",\n  \"haunt\",\n  \"haute\",\n  \"haven\",\n  \"haves\",\n  \"havoc\",\n  \"hawks\",\n  \"hayed\",\n  \"hayer\",\n  \"hayey\",\n  \"hazed\",\n  \"hazel\",\n  \"hazer\",\n  \"hazes\",\n  \"heads\",\n  \"heady\",\n  \"heals\",\n  \"heaps\",\n  \"heard\",\n  \"hears\",\n  \"heart\",\n  \"heats\",\n  \"heave\",\n  \"heavy\",\n  \"hecks\",\n  \"hedge\",\n  \"heeds\",\n  \"heels\",\n  \"hefts\",\n  \"hefty\",\n  \"heirs\",\n  \"heist\",\n  \"hells\",\n  \"helms\",\n  \"helot\",\n  \"helps\",\n  \"hemps\",\n  \"hempy\",\n  \"hence\",\n  \"henna\",\n  \"henry\",\n  \"herbs\",\n  \"herds\",\n  \"heres\",\n  \"heron\",\n  \"hertz\",\n  \"hewed\",\n  \"hewer\",\n  \"hexed\",\n  \"hexes\",\n  \"hicks\",\n  \"hider\",\n  \"hides\",\n  \"highs\",\n  \"hiked\",\n  \"hiker\",\n  \"hikes\",\n  \"hills\",\n  \"hilly\",\n  \"hilts\",\n  \"hinds\",\n  \"hinge\",\n  \"hints\",\n  \"hippy\",\n  \"hired\",\n  \"hirer\",\n  \"hires\",\n  \"hists\",\n  \"hitch\",\n  \"hived\",\n  \"hives\",\n  \"hoagy\",\n  \"hoard\",\n  \"hoary\",\n  \"hobby\",\n  \"hobos\",\n  \"hocks\",\n  \"hoers\",\n  \"hoggs\",\n  \"hoist\",\n  \"hokes\",\n  \"hokey\",\n  \"hokum\",\n  \"holds\",\n  \"holed\",\n  \"holes\",\n  \"holly\",\n  \"homed\",\n  \"homer\",\n  \"homes\",\n  \"homey\",\n  \"homos\",\n  \"honed\",\n  \"honer\",\n  \"hones\",\n  \"honey\",\n  \"honks\",\n  \"honor\",\n  \"hoods\",\n  \"hoody\",\n  \"hooey\",\n  \"hooks\",\n  \"hooky\",\n  \"hoops\",\n  \"hoots\",\n  \"hoped\",\n  \"hopes\",\n  \"hoppy\",\n  \"horas\",\n  \"horns\",\n  \"horny\",\n  \"horse\",\n  \"horsy\",\n  \"hosed\",\n  \"hosel\",\n  \"hosen\",\n  \"hoses\",\n  \"hosts\",\n  \"hotly\",\n  \"hound\",\n  \"hours\",\n  \"house\",\n  \"hovel\",\n  \"hover\",\n  \"howdy\",\n  \"howls\",\n  \"hubby\",\n  \"hucks\",\n  \"huffs\",\n  \"huffy\",\n  \"huger\",\n  \"hulas\",\n  \"hulks\",\n  \"hullo\",\n  \"hulls\",\n  \"human\",\n  \"humid\",\n  \"humor\",\n  \"humps\",\n  \"humpy\",\n  \"humus\",\n  \"hunch\",\n  \"hunks\",\n  \"hunky\",\n  \"hunts\",\n  \"hurls\",\n  \"hurly\",\n  \"hurry\",\n  \"hurts\",\n  \"husks\",\n  \"husky\",\n  \"hussy\",\n  \"hutch\",\n  \"hying\",\n  \"hypos\",\n  \"iambs\",\n  \"ichor\",\n  \"icing\",\n  \"icons\",\n  \"ictus\",\n  \"ideal\",\n  \"ideas\",\n  \"idiot\",\n  \"idled\",\n  \"idler\",\n  \"idles\",\n  \"idols\",\n  \"igloo\",\n  \"ikats\",\n  \"ikons\",\n  \"ileum\",\n  \"iliad\",\n  \"image\",\n  \"imago\",\n  \"imams\",\n  \"imbed\",\n  \"imbue\",\n  \"impel\",\n  \"impis\",\n  \"imply\",\n  \"inane\",\n  \"inapt\",\n  \"incas\",\n  \"incur\",\n  \"index\",\n  \"indie\",\n  \"indow\",\n  \"indue\",\n  \"inept\",\n  \"infer\",\n  \"infix\",\n  \"infos\",\n  \"infra\",\n  \"ingot\",\n  \"inked\",\n  \"inker\",\n  \"inkle\",\n  \"inlay\",\n  \"inlet\",\n  \"inned\",\n  \"inner\",\n  \"input\",\n  \"inset\",\n  \"inter\",\n  \"intis\",\n  \"intro\",\n  \"inure\",\n  \"inurn\",\n  \"invar\",\n  \"iodic\",\n  \"ionic\",\n  \"iotas\",\n  \"irons\",\n  \"irony\",\n  \"isles\",\n  \"islet\",\n  \"issue\",\n  \"itchy\",\n  \"items\",\n  \"ivory\",\n  \"jabot\",\n  \"jacks\",\n  \"jaded\",\n  \"jades\",\n  \"jails\",\n  \"japan\",\n  \"jaunt\",\n  \"javas\",\n  \"jawan\",\n  \"jawed\",\n  \"jazzy\",\n  \"jeans\",\n  \"jebel\",\n  \"jeeps\",\n  \"jeers\",\n  \"jello\",\n  \"jells\",\n  \"jelly\",\n  \"jemmy\",\n  \"jenny\",\n  \"jerks\",\n  \"jerky\",\n  \"jerry\",\n  \"jests\",\n  \"jetes\",\n  \"jetty\",\n  \"jewed\",\n  \"jewel\",\n  \"jibbs\",\n  \"jibed\",\n  \"jiber\",\n  \"jibes\",\n  \"jiffs\",\n  \"jiffy\",\n  \"jiggy\",\n  \"jihad\",\n  \"jills\",\n  \"jilts\",\n  \"jimmy\",\n  \"jived\",\n  \"jiver\",\n  \"jives\",\n  \"jivey\",\n  \"jocks\",\n  \"joeys\",\n  \"johns\",\n  \"joins\",\n  \"joint\",\n  \"joked\",\n  \"joker\",\n  \"jokes\",\n  \"jokey\",\n  \"joles\",\n  \"jolly\",\n  \"jolts\",\n  \"jolty\",\n  \"jotty\",\n  \"joule\",\n  \"joust\",\n  \"jowls\",\n  \"jowly\",\n  \"joyed\",\n  \"jubes\",\n  \"judas\",\n  \"judge\",\n  \"judos\",\n  \"juice\",\n  \"juicy\",\n  \"jujus\",\n  \"juked\",\n  \"jukes\",\n  \"julep\",\n  \"jumbo\",\n  \"jumps\",\n  \"jumpy\",\n  \"junks\",\n  \"junky\",\n  \"junta\",\n  \"junto\",\n  \"juror\",\n  \"justs\",\n  \"jutes\",\n  \"jutty\",\n  \"kabob\",\n  \"kales\",\n  \"kapok\",\n  \"kappa\",\n  \"kaput\",\n  \"karat\",\n  \"karma\",\n  \"karts\",\n  \"kayak\",\n  \"kazoo\",\n  \"kebab\",\n  \"kebob\",\n  \"kecks\",\n  \"kedge\",\n  \"keefs\",\n  \"keeks\",\n  \"keels\",\n  \"keens\",\n  \"keeps\",\n  \"keets\",\n  \"keeve\",\n  \"kelep\",\n  \"kelly\",\n  \"kelps\",\n  \"kelpy\",\n  \"kelts\",\n  \"kemps\",\n  \"kempt\",\n  \"kendo\",\n  \"kenos\",\n  \"keyed\",\n  \"khadi\",\n  \"khaki\",\n  \"kicks\",\n  \"kicky\",\n  \"kiddo\",\n  \"kiddy\",\n  \"kiefs\",\n  \"kills\",\n  \"kilns\",\n  \"kilos\",\n  \"kilts\",\n  \"kilty\",\n  \"kinas\",\n  \"kinds\",\n  \"kines\",\n  \"kings\",\n  \"kinin\",\n  \"kinks\",\n  \"kinky\",\n  \"kiosk\",\n  \"kirks\",\n  \"kirns\",\n  \"kissy\",\n  \"kiter\",\n  \"kites\",\n  \"kiths\",\n  \"kitty\",\n  \"knack\",\n  \"knaps\",\n  \"knars\",\n  \"knave\",\n  \"knead\",\n  \"kneed\",\n  \"kneel\",\n  \"knees\",\n  \"knell\",\n  \"knelt\",\n  \"knife\",\n  \"knish\",\n  \"knits\",\n  \"knobs\",\n  \"knock\",\n  \"knoll\",\n  \"knops\",\n  \"knosp\",\n  \"knots\",\n  \"knout\",\n  \"known\",\n  \"knows\",\n  \"knurl\",\n  \"knurs\",\n  \"koala\",\n  \"koels\",\n  \"kohls\",\n  \"kooks\",\n  \"kooky\",\n  \"kraut\",\n  \"krill\",\n  \"krona\",\n  \"krone\",\n  \"kroon\",\n  \"kudos\",\n  \"kudus\",\n  \"kudzu\",\n  \"label\",\n  \"labia\",\n  \"labor\",\n  \"laced\",\n  \"lacer\",\n  \"laces\",\n  \"lacey\",\n  \"lacks\",\n  \"laded\",\n  \"laden\",\n  \"lader\",\n  \"lades\",\n  \"ladle\",\n  \"lager\",\n  \"laich\",\n  \"laics\",\n  \"laird\",\n  \"lairs\",\n  \"laith\",\n  \"laity\",\n  \"laked\",\n  \"laker\",\n  \"lakes\",\n  \"lakhs\",\n  \"lalls\",\n  \"lamas\",\n  \"lambs\",\n  \"lamby\",\n  \"lamed\",\n  \"lamer\",\n  \"lames\",\n  \"lamps\",\n  \"lanai\",\n  \"lance\",\n  \"lands\",\n  \"lanes\",\n  \"lanky\",\n  \"lapel\",\n  \"lapis\",\n  \"lapse\",\n  \"larch\",\n  \"lards\",\n  \"lardy\",\n  \"lares\",\n  \"large\",\n  \"larks\",\n  \"larky\",\n  \"larum\",\n  \"larva\",\n  \"lased\",\n  \"laser\",\n  \"lases\",\n  \"lasso\",\n  \"lasts\",\n  \"latch\",\n  \"lated\",\n  \"laten\",\n  \"later\",\n  \"latex\",\n  \"lathe\",\n  \"laths\",\n  \"lathy\",\n  \"latke\",\n  \"laths\",\n  \"lathy\",\n  \"latke\",\n  \"latte\",\n  \"lauds\",\n  \"laugh\",\n  \"laura\",\n  \"lavas\",\n  \"laved\",\n  \"laver\",\n  \"laves\",\n  \"lawed\",\n  \"lawns\",\n  \"lawny\",\n  \"laxes\",\n  \"layed\",\n  \"layer\",\n  \"layup\",\n  \"lazed\",\n  \"lazes\",\n  \"leach\",\n  \"leads\",\n  \"leady\",\n  \"leafs\",\n  \"leafy\",\n  \"leaks\",\n  \"leaky\",\n  \"leans\",\n  \"leant\",\n  \"leaps\",\n  \"leapt\",\n  \"learn\",\n  \"lears\",\n  \"lease\",\n  \"leash\",\n  \"least\",\n  \"leave\",\n  \"leavy\",\n  \"leben\",\n  \"ledge\",\n  \"ledgy\",\n  \"leech\",\n  \"leeks\",\n  \"leers\",\n  \"leery\",\n  \"lefts\",\n  \"lefty\",\n  \"legal\",\n  \"leger\",\n  \"leggy\",\n  \"legit\",\n  \"lemme\",\n  \"lemon\",\n  \"lemur\",\n  \"lends\",\n  \"lento\",\n  \"leone\",\n  \"leper\",\n  \"lepta\",\n  \"letch\",\n  \"lethe\",\n  \"letup\",\n  \"leuds\",\n  \"levee\",\n  \"level\",\n  \"lever\",\n  \"levin\",\n  \"liana\",\n  \"liane\",\n  \"liang\",\n  \"liard\",\n  \"liars\",\n  \"libel\",\n  \"liber\",\n  \"libra\",\n  \"lichi\",\n  \"licht\",\n  \"licit\",\n  \"licks\",\n  \"lidar\",\n  \"liege\",\n  \"liens\",\n  \"lifer\",\n  \"lifts\",\n  \"liger\",\n  \"light\",\n  \"liked\",\n  \"liken\",\n  \"liker\",\n  \"likes\",\n  \"lilac\",\n  \"lilts\",\n  \"liman\",\n  \"limbo\",\n  \"limbs\",\n  \"limby\",\n  \"limed\",\n  \"limen\",\n  \"limes\",\n  \"limit\",\n  \"limps\",\n  \"lindy\",\n  \"lined\",\n  \"linen\",\n  \"liner\",\n  \"lines\",\n  \"liney\",\n  \"linga\",\n  \"lingo\",\n  \"lings\",\n  \"lingy\",\n  \"links\",\n  \"lints\",\n  \"linty\",\n  \"lions\",\n  \"lipid\",\n  \"lippy\",\n  \"liras\",\n  \"lisps\",\n  \"lists\",\n  \"litai\",\n  \"litas\",\n  \"litch\",\n  \"liter\",\n  \"lithe\",\n  \"lived\",\n  \"liven\",\n  \"liver\",\n  \"lives\",\n  \"livid\",\n  \"livre\",\n  \"llama\",\n  \"loach\",\n  \"loads\",\n  \"loafs\",\n  \"loams\",\n  \"loamy\",\n  \"loans\",\n  \"loath\",\n  \"lobar\",\n  \"lobby\",\n  \"lobed\",\n  \"lobes\",\n  \"lobos\",\n  \"local\",\n  \"lochs\",\n  \"locks\",\n  \"locos\",\n  \"locus\",\n  \"loden\",\n  \"lodes\",\n  \"lofts\",\n  \"lofty\",\n  \"logan\",\n  \"loges\",\n  \"loggy\",\n  \"logic\",\n  \"logon\",\n  \"logos\",\n  \"loids\",\n  \"loins\",\n  \"lolls\",\n  \"lolly\",\n  \"loner\",\n  \"longe\",\n  \"longs\",\n  \"looed\",\n  \"looks\",\n  \"looms\",\n  \"loons\",\n  \"loony\",\n  \"loops\",\n  \"loopy\",\n  \"loose\",\n  \"loots\",\n  \"loped\",\n  \"loper\",\n  \"lopes\",\n  \"loppy\",\n  \"loral\",\n  \"lords\",\n  \"lores\",\n  \"loris\",\n  \"lorry\",\n  \"losel\",\n  \"loser\",\n  \"loses\",\n  \"lossy\",\n  \"lotah\",\n  \"lotas\",\n  \"lotos\",\n  \"lotte\",\n  \"lotto\",\n  \"lotus\",\n  \"lough\",\n  \"louie\",\n  \"louis\",\n  \"loury\",\n  \"louse\",\n  \"lousy\",\n  \"louts\",\n  \"lovat\",\n  \"loved\",\n  \"lover\",\n  \"loves\",\n  \"lowed\",\n  \"lower\",\n  \"lowes\",\n  \"lowly\",\n  \"loyal\",\n  \"lubed\",\n  \"lubes\",\n  \"luces\",\n  \"lucid\",\n  \"lucks\",\n  \"lucky\",\n  \"ludes\",\n  \"luged\",\n  \"luger\",\n  \"luges\",\n  \"lulls\",\n  \"lumen\",\n  \"lumps\",\n  \"lumpy\",\n  \"lunar\",\n  \"lunas\",\n  \"lunch\",\n  \"lunes\",\n  \"lunet\",\n  \"lunge\",\n  \"lungs\",\n  \"lunks\",\n  \"lupin\",\n  \"lupus\",\n  \"lurch\",\n  \"lured\",\n  \"lurer\",\n  \"lures\",\n  \"lurid\",\n  \"lurks\",\n  \"lusks\",\n  \"lusts\",\n  \"lusty\",\n  \"lutea\",\n  \"luted\",\n  \"lutes\",\n  \"luxes\",\n  \"lyard\",\n  \"lyart\",\n  \"lying\",\n  \"lymph\",\n  \"lynch\",\n  \"lyres\",\n  \"mabes\",\n  \"macaw\",\n  \"maced\",\n  \"macer\",\n  \"maces\",\n  \"mache\",\n  \"macho\",\n  \"machs\",\n  \"macks\",\n  \"macro\",\n  \"madam\",\n  \"madly\",\n  \"madre\",\n  \"mafia\",\n  \"mafic\",\n  \"mages\",\n  \"magic\",\n  \"magma\",\n  \"mague\",\n  \"magus\",\n  \"maids\",\n  \"maill\",\n  \"mails\",\n  \"maims\",\n  \"mains\",\n  \"maist\",\n  \"maize\",\n  \"major\",\n  \"makar\",\n  \"maker\",\n  \"makes\",\n  \"malar\",\n  \"males\",\n  \"malls\",\n  \"malms\",\n  \"malty\",\n  \"mamas\",\n  \"mamba\",\n  \"mambo\",\n  \"mamey\",\n  \"mamie\",\n  \"mamma\",\n  \"mammy\",\n  \"maned\",\n  \"manes\",\n  \"mange\",\n  \"mango\",\n  \"mangy\",\n  \"mania\",\n  \"manic\",\n  \"manly\",\n  \"manna\",\n  \"manor\",\n  \"manos\",\n  \"manse\",\n  \"manta\",\n  \"manus\",\n  \"maple\",\n  \"maqui\",\n  \"maras\",\n  \"march\",\n  \"marcs\",\n  \"mares\",\n  \"marge\",\n  \"maria\",\n  \"marks\",\n  \"marls\",\n  \"marly\",\n  \"marse\",\n  \"marsh\",\n  \"marts\",\n  \"marvy\",\n  \"maser\",\n  \"mashy\",\n  \"masks\",\n  \"mason\",\n  \"massa\",\n  \"masse\",\n  \"massy\",\n  \"masts\",\n  \"match\",\n  \"mated\",\n  \"mater\",\n  \"mates\",\n  \"matey\",\n  \"maths\",\n  \"matte\",\n  \"matts\",\n  \"matza\",\n  \"mauls\",\n  \"maund\",\n  \"maven\",\n  \"mavie\",\n  \"mavin\",\n  \"mavis\",\n  \"mawed\",\n  \"maxed\",\n  \"maxes\",\n  \"maxim\",\n  \"maxis\",\n  \"mayan\",\n  \"mayas\",\n  \"maybe\",\n  \"mayor\",\n  \"mayos\",\n  \"mayst\",\n  \"mazed\",\n  \"mazer\",\n  \"mazes\",\n  \"mbira\",\n  \"meads\",\n  \"meals\",\n  \"mealy\",\n  \"means\",\n  \"meant\",\n  \"meany\",\n  \"meats\",\n  \"meaty\",\n  \"mecca\",\n  \"medal\",\n  \"media\",\n  \"medic\",\n  \"medii\",\n  \"meeds\",\n  \"meets\",\n  \"meiny\",\n  \"melds\",\n  \"melee\",\n  \"melic\",\n  \"mells\",\n  \"melon\",\n  \"melts\",\n  \"memes\",\n  \"memos\",\n  \"menad\",\n  \"mends\",\n  \"mensa\",\n  \"mense\",\n  \"menus\",\n  \"meous\",\n  \"meows\",\n  \"mercy\",\n  \"merde\",\n  \"merer\",\n  \"meres\",\n  \"merge\",\n  \"merit\",\n  \"merks\",\n  \"merle\",\n  \"merls\",\n  \"merry\",\n  \"mesas\",\n  \"meshy\",\n  \"mesic\",\n  \"mesne\",\n  \"meson\",\n  \"messy\",\n  \"metal\",\n  \"meted\",\n  \"meter\",\n  \"metes\",\n  \"meths\",\n  \"metis\",\n  \"metol\",\n  \"metre\",\n  \"metro\",\n  \"meuse\",\n  \"mezes\",\n  \"mezzo\",\n  \"miaou\",\n  \"miaow\",\n  \"miasm\",\n  \"miaul\",\n  \"micas\",\n  \"miche\",\n  \"micks\",\n  \"micro\",\n  \"midge\",\n  \"midis\",\n  \"midst\",\n  \"miens\",\n  \"miffs\",\n  \"miffy\",\n  \"might\",\n  \"mikes\",\n  \"mikra\",\n  \"milch\",\n  \"milds\",\n  \"miler\",\n  \"miles\",\n  \"milfs\",\n  \"milks\",\n  \"milky\",\n  \"mille\",\n  \"mills\",\n  \"milos\",\n  \"milts\",\n  \"milty\",\n  \"mimed\",\n  \"mimer\",\n  \"mimes\",\n  \"mimic\",\n  \"minae\",\n  \"minas\",\n  \"minds\",\n  \"mined\",\n  \"miner\",\n  \"mines\",\n  \"mingy\",\n  \"minim\",\n  \"minis\",\n  \"minks\",\n  \"minny\",\n  \"minor\",\n  \"minot\",\n  \"minow\",\n  \"mints\",\n  \"minty\",\n  \"minus\",\n  \"mired\",\n  \"mires\",\n  \"mirex\",\n  \"mirks\",\n  \"mirky\",\n  \"mirth\",\n  \"mirza\",\n  \"misdo\",\n  \"miser\",\n  \"mises\",\n  \"misos\",\n  \"missy\",\n  \"mists\",\n  \"misty\",\n  \"miter\",\n  \"mites\",\n  \"mitis\",\n  \"mitre\",\n  \"mitts\",\n  \"mitty\",\n  \"mixed\",\n  \"mixer\",\n  \"mixes\",\n  \"mixup\",\n  \"mizen\",\n  \"moans\",\n  \"moats\",\n  \"moble\",\n  \"mocha\",\n  \"mocks\",\n  \"modal\",\n  \"model\",\n  \"modem\",\n  \"modes\",\n  \"modus\",\n  \"moggy\",\n  \"mogul\",\n  \"mohel\",\n  \"mohur\",\n  \"moils\",\n  \"moira\",\n  \"moire\",\n  \"moist\",\n  \"mojos\",\n  \"mokes\",\n  \"molal\",\n  \"molar\",\n  \"molas\",\n  \"molds\",\n  \"moldy\",\n  \"moles\",\n  \"molls\",\n  \"molly\",\n  \"molto\",\n  \"molts\",\n  \"momma\",\n  \"mommy\",\n  \"money\",\n  \"mongo\",\n  \"monie\",\n  \"monks\",\n  \"monos\",\n  \"monte\",\n  \"month\",\n  \"mooch\",\n  \"moods\",\n  \"moody\",\n  \"mooed\",\n  \"moola\",\n  \"moons\",\n  \"moony\",\n  \"moose\",\n  \"moots\",\n  \"moped\",\n  \"moper\",\n  \"mopes\",\n  \"mopey\",\n  \"mopped\",\n  \"mopus\",\n  \"morae\",\n  \"moral\",\n  \"moras\",\n  \"moray\",\n  \"morel\",\n  \"mores\",\n  \"morns\",\n  \"moron\",\n  \"morph\",\n  \"morro\",\n  \"morse\",\n  \"morts\",\n  \"mosey\",\n  \"mossy\",\n  \"mosts\",\n  \"motel\",\n  \"motes\",\n  \"moths\",\n  \"mothy\",\n  \"motif\",\n  \"motor\",\n  \"motto\",\n  \"mound\",\n  \"mount\",\n  \"mourn\",\n  \"mouse\",\n  \"mousy\",\n  \"mouth\",\n  \"moved\",\n  \"mover\",\n  \"moves\",\n  \"movie\",\n  \"mowed\",\n  \"mower\",\n  \"moxie\",\n  \"mucid\",\n  \"mucks\",\n  \"mucky\",\n  \"mucus\",\n  \"muddy\",\n  \"mudra\",\n  \"muffs\",\n  \"muggs\",\n  \"muggy\",\n  \"mulch\",\n  \"muled\",\n  \"mules\",\n  \"mulls\",\n  \"multi\",\n  \"mumms\",\n  \"mummy\",\n  \"mumps\",\n  \"mumus\",\n  \"munch\",\n  \"mural\",\n  \"muras\",\n  \"murks\",\n  \"murky\",\n  \"mused\",\n  \"muses\",\n  \"mushy\",\n  \"music\",\n  \"musks\",\n  \"musky\",\n  \"mussy\",\n  \"musts\",\n  \"musty\",\n  \"muted\",\n  \"muter\",\n  \"mutes\",\n  \"muton\",\n  \"mutts\",\n  \"muzzy\",\n  \"mylar\",\n  \"myths\",\n  \"mythy\",\n  \"naans\",\n  \"nacho\",\n  \"nails\",\n  \"naive\",\n  \"named\",\n  \"names\",\n  \"nance\",\n  \"nancy\",\n  \"nanny\",\n  \"nappy\",\n  \"narco\",\n  \"narcs\",\n  \"nards\",\n  \"narks\",\n  \"narky\",\n  \"nasal\",\n  \"nasty\",\n  \"natal\",\n  \"natch\",\n  \"nates\",\n  \"natty\",\n  \"naval\",\n  \"navar\",\n  \"navel\",\n  \"naves\",\n  \"navvy\",\n  \"nazis\",\n  \"neaps\",\n  \"nears\",\n  \"neats\",\n  \"necks\",\n  \"necro\",\n  \"needs\",\n  \"needy\",\n  \"neems\",\n  \"neeps\",\n  \"negro\",\n  \"negus\",\n  \"neifs\",\n  \"neigh\",\n  \"neist\",\n  \"nelly\",\n  \"nemas\",\n  \"nenes\",\n  \"neons\",\n  \"nerds\",\n  \"nerdy\",\n  \"nerol\",\n  \"nerts\",\n  \"nertz\",\n  \"nervy\",\n  \"nests\",\n  \"netop\",\n  \"netts\",\n  \"never\",\n  \"newer\",\n  \"newie\",\n  \"newsy\",\n  \"newts\",\n  \"nexus\",\n  \"nicer\",\n  \"niche\",\n  \"nicks\",\n  \"nicol\",\n  \"nidal\",\n  \"nided\",\n  \"nides\",\n  \"niece\",\n  \"nieve\",\n  \"nifty\",\n  \"nighs\",\n  \"night\",\n  \"nines\",\n  \"ninny\",\n  \"ninth\",\n  \"nippy\",\n  \"nisei\",\n  \"nisus\",\n  \"niter\",\n  \"nites\",\n  \"nitid\",\n  \"niton\",\n  \"nitre\",\n  \"nitro\",\n  \"nitty\",\n  \"nival\",\n  \"nixes\",\n  \"nixie\",\n  \"nizam\",\n  \"nobby\",\n  \"noble\",\n  \"nobly\",\n  \"nocks\",\n  \"nodal\",\n  \"noddy\",\n  \"nodes\",\n  \"nodus\",\n  \"noels\",\n  \"noggs\",\n  \"nohow\",\n  \"noils\",\n  \"noily\",\n  \"noirs\",\n  \"noise\",\n  \"noisy\",\n  \"nolos\",\n  \"nomad\",\n  \"nomas\",\n  \"nomen\",\n  \"nomes\",\n  \"nomoi\",\n  \"nomos\",\n  \"nonas\",\n  \"nonce\",\n  \"nones\",\n  \"noons\",\n  \"noose\",\n  \"nopal\",\n  \"noria\",\n  \"noris\",\n  \"norms\",\n  \"nosed\",\n  \"noses\",\n  \"nosey\",\n  \"notch\",\n  \"noted\",\n  \"noter\",\n  \"notes\",\n  \"nouns\",\n  \"novel\",\n  \"nuder\",\n  \"nudes\",\n  \"nudge\",\n  \"nudie\",\n  \"nudzh\",\n  \"nuked\",\n  \"nukes\",\n  \"nulls\",\n  \"numbs\",\n  \"nurse\",\n  \"nutty\",\n  \"nymph\",\n  \"oasis\",\n  \"oaten\",\n  \"oater\",\n  \"oaths\",\n  \"obese\",\n  \"obeys\",\n  \"occur\",\n  \"ocean\",\n  \"ocher\",\n  \"octal\",\n  \"octan\",\n  \"octet\",\n  \"odals\",\n  \"oddly\",\n  \"odors\",\n  \"ofays\",\n  \"offed\",\n  \"offer\",\n  \"often\",\n  \"ofter\",\n  \"ogive\",\n  \"ogled\",\n  \"ogler\",\n  \"ogles\",\n  \"oiled\",\n  \"oiler\",\n  \"oinks\",\n  \"okays\",\n  \"okras\",\n  \"olden\",\n  \"older\",\n  \"oldie\",\n  \"olive\",\n  \"ollas\",\n  \"ology\",\n  \"ombre\",\n  \"omega\",\n  \"omens\",\n  \"omers\",\n  \"omits\",\n  \"oncet\",\n  \"onery\",\n  \"onion\",\n  \"onset\",\n  \"ontic\",\n  \"oozed\",\n  \"oozes\",\n  \"opals\",\n  \"opens\",\n  \"opera\",\n  \"opine\",\n  \"oping\",\n  \"opium\",\n  \"opsin\",\n  \"opted\",\n  \"optic\",\n  \"orach\",\n  \"orals\",\n  \"orang\",\n  \"orate\",\n  \"orbed\",\n  \"orbit\",\n  \"orcas\",\n  \"order\",\n  \"organ\",\n  \"oriel\",\n  \"ortho\",\n  \"orzos\",\n  \"other\",\n  \"otter\",\n  \"ottos\",\n  \"ought\",\n  \"ounce\",\n  \"ousts\",\n  \"outby\",\n  \"outdo\",\n  \"outed\",\n  \"outer\",\n  \"ovals\",\n  \"ovary\",\n  \"ovate\",\n  \"ovens\",\n  \"overs\",\n  \"overt\",\n  \"owlet\",\n  \"owned\",\n  \"owner\",\n  \"owsen\",\n  \"oxbow\",\n  \"oxide\",\n  \"ozone\",\n  \"paced\",\n  \"pacer\",\n  \"paces\",\n  \"pacey\",\n  \"pacha\",\n  \"packs\",\n  \"pacts\",\n  \"paddy\",\n  \"padis\",\n  \"padle\",\n  \"padre\",\n  \"padri\",\n  \"paean\",\n  \"paeon\",\n  \"pagan\",\n  \"paged\",\n  \"pager\",\n  \"pages\",\n  \"pagod\",\n  \"paiks\",\n  \"pails\",\n  \"pains\",\n  \"paint\",\n  \"pairs\",\n  \"paise\",\n  \"palea\",\n  \"paled\",\n  \"paler\",\n  \"pales\",\n  \"palet\",\n  \"palls\",\n  \"pally\",\n  \"palms\",\n  \"palmy\",\n  \"palsy\",\n  \"pampa\",\n  \"panda\",\n  \"pandy\",\n  \"paned\",\n  \"panel\",\n  \"panes\",\n  \"panga\",\n  \"pangs\",\n  \"panic\",\n  \"pansy\",\n  \"panto\",\n  \"pants\",\n  \"panty\",\n  \"papal\",\n  \"papas\",\n  \"papaw\",\n  \"paper\",\n  \"pappi\",\n  \"pappy\",\n  \"parae\",\n  \"paras\",\n  \"parch\",\n  \"pardi\",\n  \"pards\",\n  \"pardy\",\n  \"pared\",\n  \"pareo\",\n  \"parer\",\n  \"pares\",\n  \"pareu\",\n  \"parge\",\n  \"pargo\",\n  \"paris\",\n  \"parka\",\n  \"parks\",\n  \"parle\",\n  \"parol\",\n  \"parrs\",\n  \"parry\",\n  \"parse\",\n  \"parts\",\n  \"party\",\n  \"parve\",\n  \"pases\",\n  \"pasha\",\n  \"passe\",\n  \"pasta\",\n  \"paste\",\n  \"pasts\",\n  \"pasty\",\n  \"patch\",\n  \"pated\",\n  \"paten\",\n  \"pater\",\n  \"pates\",\n  \"paths\",\n  \"patin\",\n  \"patio\",\n  \"patly\",\n  \"patsy\",\n  \"patty\",\n  \"pause\",\n  \"pavan\",\n  \"paved\",\n  \"paver\",\n  \"paves\",\n  \"pavid\",\n  \"pavin\",\n  \"pavis\",\n  \"pawed\",\n  \"pawer\",\n  \"pawky\",\n  \"pawls\",\n  \"pawns\",\n  \"paxes\",\n  \"payed\",\n  \"payee\",\n  \"payer\",\n  \"payor\",\n  \"peace\",\n  \"peach\",\n  \"peage\",\n  \"peags\",\n  \"peaks\",\n  \"peaky\",\n  \"peals\",\n  \"peans\",\n  \"pearl\",\n  \"pears\",\n  \"peart\",\n  \"pease\",\n  \"peats\",\n  \"peaty\",\n  \"peavy\",\n  \"pecan\",\n  \"pechs\",\n  \"pecks\",\n  \"pecky\",\n  \"pedal\",\n  \"pedes\",\n  \"pedro\",\n  \"peeks\",\n  \"peels\",\n  \"peens\",\n  \"peeps\",\n  \"peers\",\n  \"peery\",\n  \"peeve\",\n  \"peggy\",\n  \"peins\",\n  \"peise\",\n  \"pekan\",\n  \"pekes\",\n  \"pekoe\",\n  \"peles\",\n  \"pelfs\",\n  \"pelon\",\n  \"pelts\",\n  \"penal\",\n  \"pence\",\n  \"pends\",\n  \"penes\",\n  \"pengo\",\n  \"penis\",\n  \"penna\",\n  \"penne\",\n  \"penni\",\n  \"penny\",\n  \"peons\",\n  \"peony\",\n  \"pepla\",\n  \"pepos\",\n  \"peppy\",\n  \"perch\",\n  \"peril\",\n  \"perks\",\n  \"perky\",\n  \"perms\",\n  \"perps\",\n  \"perry\",\n  \"perse\",\n  \"pervs\",\n  \"pesky\",\n  \"pesos\",\n  \"pesto\",\n  \"pests\",\n  \"petal\",\n  \"peter\",\n  \"petit\",\n  \"petti\",\n  \"petto\",\n  \"petty\",\n  \"pewee\",\n  \"pewit\",\n  \"phage\",\n  \"phase\",\n  \"phial\",\n  \"phlox\",\n  \"phone\",\n  \"phono\",\n  \"phons\",\n  \"phony\",\n  \"photo\",\n  \"phots\",\n  \"phpht\",\n  \"phuts\",\n  \"piano\",\n  \"pians\",\n  \"piece\",\n  \"piers\",\n  \"pieta\",\n  \"piety\",\n  \"piggy\",\n  \"pigmy\",\n  \"piing\",\n  \"piked\",\n  \"piker\",\n  \"pikes\",\n  \"pikis\",\n  \"pilaf\",\n  \"pilar\",\n  \"pilau\",\n  \"pilaw\",\n  \"pilea\",\n  \"piled\",\n  \"pilei\",\n  \"piles\",\n  \"pilis\",\n  \"pills\",\n  \"pilot\",\n  \"pilus\",\n  \"pimas\",\n  \"pimps\",\n  \"pinas\",\n  \"pinch\",\n  \"pined\",\n  \"pines\",\n  \"piney\",\n  \"pingo\",\n  \"pings\",\n  \"pinks\",\n  \"pinky\",\n  \"pinon\",\n  \"pinot\",\n  \"pinta\",\n  \"pinto\",\n  \"pints\",\n  \"pinup\",\n  \"pions\",\n  \"pious\",\n  \"piped\",\n  \"piper\",\n  \"pipes\",\n  \"pipet\",\n  \"pipit\",\n  \"pitas\",\n  \"pitch\",\n  \"piths\",\n  \"pithy\",\n  \"piton\",\n  \"pitta\",\n  \"pitas\",\n  \"pitch\",\n  \"piths\",\n  \"pithy\",\n  \"piton\",\n  \"pitta\",\n  \"pivot\",\n  \"pixel\",\n  \"pixes\",\n  \"pixie\",\n  \"pizza\",\n  \"place\",\n  \"plack\",\n  \"plage\",\n  \"plaid\",\n  \"plain\",\n  \"plait\",\n  \"plane\",\n  \"plank\",\n  \"plans\",\n  \"plant\",\n  \"plash\",\n  \"plasm\",\n  \"plate\",\n  \"plats\",\n  \"platy\",\n  \"playa\",\n  \"plays\",\n  \"plaza\",\n  \"plead\",\n  \"pleas\",\n  \"pleat\",\n  \"plebe\",\n  \"plebs\",\n  \"plena\",\n  \"plink\",\n  \"plods\",\n  \"plonk\",\n  \"plops\",\n  \"plots\",\n  \"plott\",\n  \"plotz\",\n  \"plows\",\n  \"ploys\",\n  \"pluck\",\n  \"plugs\",\n  \"plume\",\n  \"plump\",\n  \"plums\",\n  \"plumy\",\n  \"plunk\",\n  \"plush\",\n  \"plyer\",\n  \"poach\",\n  \"pocks\",\n  \"pocky\",\n  \"podgy\",\n  \"podia\",\n  \"poems\",\n  \"poesy\",\n  \"poets\",\n  \"pogey\",\n  \"pogos\",\n  \"point\",\n  \"poise\",\n  \"poked\",\n  \"poker\",\n  \"pokes\",\n  \"pokey\",\n  \"polar\",\n  \"poled\",\n  \"poler\",\n  \"poles\",\n  \"polio\",\n  \"polis\",\n  \"polka\",\n  \"polls\",\n  \"polos\",\n  \"polyp\",\n  \"polys\",\n  \"pomes\",\n  \"pomps\",\n  \"ponce\",\n  \"ponds\",\n  \"pones\",\n  \"pongs\",\n  \"pooch\",\n  \"poofs\",\n  \"poofy\",\n  \"poohs\",\n  \"pools\",\n  \"poons\",\n  \"poops\",\n  \"poori\",\n  \"poove\",\n  \"popes\",\n  \"poppy\",\n  \"popsy\",\n  \"porch\",\n  \"pored\",\n  \"pores\",\n  \"porgy\",\n  \"porks\",\n  \"porky\",\n  \"porno\",\n  \"porns\",\n  \"ports\",\n  \"posed\",\n  \"poser\",\n  \"poses\",\n  \"posit\",\n  \"posse\",\n  \"posts\",\n  \"potsy\",\n  \"potto\",\n  \"potty\",\n  \"pouch\",\n  \"poufs\",\n  \"poult\",\n  \"pound\",\n  \"pour\",\n  \"pouts\",\n  \"pouty\",\n  \"power\",\n  \"prams\",\n  \"prang\",\n  \"prank\",\n  \"prase\",\n  \"prate\",\n  \"prats\",\n  \"praus\",\n  \"prawn\",\n  \"prays\",\n  \"preed\",\n  \"preen\",\n  \"prees\",\n  \"preps\",\n  \"prese\",\n  \"press\",\n  \"prest\",\n  \"prexy\",\n  \"preys\",\n  \"price\",\n  \"prick\",\n  \"pricy\",\n  \"pride\",\n  \"pried\",\n  \"prier\",\n  \"pries\",\n  \"prigs\",\n  \"prill\",\n  \"prima\",\n  \"prime\",\n  \"primi\",\n  \"primo\",\n  \"primp\",\n  \"prims\",\n  \"prink\",\n  \"print\",\n  \"prior\",\n  \"prise\",\n  \"prism\",\n  \"priss\",\n  \"privy\",\n  \"prize\",\n  \"proas\",\n  \"probe\",\n  \"prods\",\n  \"proem\",\n  \"profs\",\n  \"progs\",\n  \"prole\",\n  \"promo\",\n  \"proms\",\n  \"prone\",\n  \"prong\",\n  \"proof\",\n  \"props\",\n  \"prose\",\n  \"proso\",\n  \"pross\",\n  \"prost\",\n  \"prosy\",\n  \"proud\",\n  \"prove\",\n  \"prowl\",\n  \"proxy\",\n  \"prude\",\n  \"prune\",\n  \"pryer\",\n  \"psalm\",\n  \"psych\",\n  \"pubes\",\n  \"pubic\",\n  \"pubis\",\n  \"puces\",\n  \"pucka\",\n  \"pucks\",\n  \"pudgy\",\n  \"pudic\",\n  \"puffs\",\n  \"puffy\",\n  \"puggy\",\n  \"pujas\",\n  \"puked\",\n  \"pukes\",\n  \"pukey\",\n  \"puler\",\n  \"pules\",\n  \"pulik\",\n  \"pulis\",\n  \"pulls\",\n  \"pulps\",\n  \"pulpy\",\n  \"pulse\",\n  \"pumas\",\n  \"pumps\",\n  \"punas\",\n  \"punch\",\n  \"pungs\",\n  \"punji\",\n  \"punka\",\n  \"punks\",\n  \"punny\",\n  \"punto\",\n  \"punts\",\n  \"punty\",\n  \"pupae\",\n  \"pupal\",\n  \"pupas\",\n  \"pupil\",\n  \"puppy\",\n  \"puree\",\n  \"purer\",\n  \"purge\",\n  \"purin\",\n  \"puris\",\n  \"purls\",\n  \"purrs\",\n  \"purse\",\n  \"pursy\",\n  \"puses\",\n  \"pushy\",\n  \"pussy\",\n  \"puton\",\n  \"putts\",\n  \"putty\",\n  \"pygmy\",\n  \"pyins\",\n  \"pylon\",\n  \"pyoid\",\n  \"pyran\",\n  \"pyres\",\n  \"pyrex\",\n  \"pyric\",\n  \"pyros\",\n  \"pyxes\",\n  \"pyxie\",\n  \"pyxes\",\n  \"queen\",\n  \"query\",\n  \"quest\",\n  \"queue\",\n  \"quick\",\n  \"quiet\",\n  \"quilt\",\n  \"quite\",\n  \"quote\",\n  \"qadis\",\n  \"qaids\",\n  \"qajaq\",\n  \"qanat\",\n  \"qapik\",\n  \"qibla\",\n  \"qilas\",\n  \"qipao\",\n  \"qophs\",\n  \"qorma\",\n  \"quabs\",\n  \"quack\",\n  \"quads\",\n  \"quaff\",\n  \"quail\",\n  \"quake\",\n  \"quaky\",\n  \"qualm\",\n  \"quant\",\n  \"quare\",\n  \"quark\",\n  \"quarl\",\n  \"quart\",\n  \"quash\",\n  \"queek\",\n  \"queem\",\n  \"queen\",\n  \"queer\",\n  \"quell\",\n  \"query\",\n  \"queso\",\n  \"quest\",\n  \"queue\",\n  \"quibs\",\n  \"quich\",\n  \"races\",\n  \"racks\",\n  \"radar\",\n  \"radio\",\n  \"raven\",\n  \"rails\",\n  \"rainy\",\n  \"raise\",\n  \"rally\",\n  \"ranch\",\n  \"range\",\n  \"ranks\",\n  \"rapid\",\n  \"rated\",\n  \"rates\",\n  \"ratio\",\n  \"razor\",\n  \"reach\",\n  \"react\",\n  \"reads\",\n  \"ready\",\n  \"realm\",\n  \"rebel\",\n  \"refer\",\n  \"reign\",\n  \"relax\",\n  \"relay\",\n  \"renal\",\n  \"renew\",\n  \"reply\",\n  \"reset\",\n  \"resin\",\n  \"retro\",\n  \"rider\",\n  \"rides\",\n  \"ridge\",\n  \"rifle\",\n  \"right\",\n  \"rigid\",\n  \"rings\",\n  \"rinse\",\n  \"risen\",\n  \"rises\",\n  \"risks\",\n  \"risky\",\n  \"rival\",\n  \"river\",\n  \"roads\",\n  \"robot\",\n  \"rocks\",\n  \"rocky\",\n  \"rogue\",\n  \"roles\",\n  \"rolls\",\n  \"roman\",\n  \"rooms\",\n  \"roots\",\n  \"ropes\",\n  \"roses\",\n  \"rough\",\n  \"round\",\n  \"route\",\n  \"royal\",\n  \"rugby\",\n  \"ruins\",\n  \"ruled\",\n  \"ruler\",\n  \"rules\",\n  \"rural\",\n  \"raker\",\n  \"rakes\",\n  \"rally\",\n  \"ralph\",\n  \"ramal\",\n  \"ramee\",\n  \"ramen\",\n  \"rames\",\n  \"ramet\",\n  \"ramie\",\n  \"ramin\",\n  \"ramis\",\n  \"rammy\",\n  \"ramon\",\n  \"ramps\",\n  \"ramus\",\n  \"ranas\",\n  \"rance\",\n  \"ranch\",\n  \"rando\",\n  \"rands\",\n  \"randy\",\n  \"ranee\",\n  \"ranes\",\n  \"ranga\",\n  \"range\",\n  \"rangi\",\n  \"rangy\",\n  \"ranid\",\n  \"ranis\",\n  \"ranke\",\n  \"ranks\",\n  \"sadly\",\n  \"safer\",\n  \"salad\",\n  \"sales\",\n  \"salon\",\n  \"sandy\",\n  \"satin\",\n  \"sauce\",\n  \"saved\",\n  \"saves\",\n  \"scale\",\n  \"scalp\",\n  \"scans\",\n  \"scare\",\n  \"scarf\",\n  \"scary\",\n  \"scene\",\n  \"scent\",\n  \"scoop\",\n  \"scope\",\n  \"score\",\n  \"scout\",\n  \"scrap\",\n  \"screw\",\n  \"seals\",\n  \"seams\",\n  \"seats\",\n  \"seeds\",\n  \"seeks\",\n  \"seems\",\n  \"sells\",\n  \"sends\",\n  \"sense\",\n  \"serum\",\n  \"serve\",\n  \"setup\",\n  \"seven\",\n  \"sewer\",\n  \"shade\",\n  \"shaft\",\n  \"shake\",\n  \"shall\",\n  \"shame\",\n  \"shape\",\n  \"share\",\n  \"shark\",\n  \"sharp\",\n  \"sheep\",\n  \"sheer\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shift\",\n  \"shine\",\n  \"shiny\",\n  \"ships\",\n  \"shirt\",\n  \"shock\",\n  \"shoes\",\n  \"shook\",\n  \"shoot\",\n  \"shops\",\n  \"shore\",\n  \"short\",\n  \"shots\",\n  \"shown\",\n  \"shows\",\n  \"sides\",\n  \"siege\",\n  \"sight\",\n  \"sigma\",\n  \"signs\",\n  \"silly\",\n  \"since\",\n  \"sites\",\n  \"sixth\",\n  \"sized\",\n  \"sizes\",\n  \"skies\",\n  \"skill\",\n  \"skins\",\n  \"skirt\",\n  \"skull\",\n  \"slate\",\n  \"slave\",\n  \"sleek\",\n  \"sleep\",\n  \"slept\",\n  \"slice\",\n  \"slide\",\n  \"slope\",\n  \"slots\",\n  \"small\",\n  \"smart\",\n  \"smell\",\n  \"smile\",\n  \"smoke\",\n  \"snack\",\n  \"snake\",\n  \"sneak\",\n  \"socks\",\n  \"soils\",\n  \"solar\",\n  \"solid\",\n  \"solve\",\n  \"songs\",\n  \"sonic\",\n  \"sorry\",\n  \"sorts\",\n  \"souls\",\n  \"sound\",\n  \"south\",\n  \"space\",\n  \"spare\",\n  \"spark\",\n  \"speak\",\n  \"specs\",\n  \"speed\",\n  \"spell\",\n  \"spend\",\n  \"spent\",\n  \"sperm\",\n  \"spice\",\n  \"spicy\",\n  \"spike\",\n  \"spine\",\n  \"spite\",\n  \"split\",\n  \"spoke\",\n  \"spoon\",\n  \"sport\",\n  \"spots\",\n  \"spray\",\n  \"spurs\",\n  \"squad\",\n  \"stack\",\n  \"staff\",\n  \"stage\",\n  \"stain\",\n  \"stake\",\n  \"stamp\",\n  \"stand\",\n  \"stark\",\n  \"stars\",\n  \"start\",\n  \"state\",\n  \"stats\",\n  \"stays\",\n  \"steak\",\n  \"steal\",\n  \"steam\",\n  \"steel\",\n  \"steep\",\n  \"steer\",\n  \"stems\",\n  \"steps\",\n  \"stick\",\n  \"stiff\",\n  \"still\",\n  \"stock\",\n  \"stole\",\n  \"stone\",\n  \"stood\",\n  \"stool\",\n  \"stops\",\n  \"store\",\n  \"storm\",\n  \"story\",\n  \"stove\",\n  \"strap\",\n  \"straw\",\n  \"strip\",\n  \"stuck\",\n  \"study\",\n  \"stuff\",\n  \"style\",\n  \"sucks\",\n  \"sugar\",\n  \"suite\",\n  \"suits\",\n  \"sunny\",\n  \"super\",\n  \"surge\",\n  \"sushi\",\n  \"swear\",\n  \"sweat\",\n  \"sweet\",\n  \"swept\",\n  \"swift\",\n  \"swing\",\n  \"swiss\",\n  \"sword\",\n  \"syrup\",\n  \"table\",\n  \"taken\",\n  \"takes\",\n  \"tales\",\n  \"talks\",\n  \"tanks\",\n  \"tapes\",\n  \"tasks\",\n  \"taste\",\n  \"tasty\",\n  \"taxes\",\n  \"teach\",\n  \"teams\",\n  \"tears\",\n  \"teens\",\n  \"teeth\",\n  \"tells\",\n  \"tempo\",\n  \"tends\",\n  \"tenth\",\n  \"tents\",\n  \"terms\",\n  \"tests\",\n  \"texts\",\n  \"thank\",\n  \"theft\",\n  \"their\",\n  \"theme\",\n  \"there\",\n  \"these\",\n  \"thick\",\n  \"thief\",\n  \"thigh\",\n  \"thing\",\n  \"think\",\n  \"third\",\n  \"those\",\n  \"three\",\n  \"threw\",\n  \"throw\",\n  \"thumb\",\n  \"tiger\",\n  \"tight\",\n  \"tiles\",\n  \"timer\",\n  \"times\",\n  \"tired\",\n  \"tires\",\n  \"title\",\n  \"toast\",\n  \"today\",\n  \"token\",\n  \"tones\",\n  \"tools\",\n  \"tooth\",\n  \"topic\",\n  \"torch\",\n  \"total\",\n  \"touch\",\n  \"tough\",\n  \"tours\",\n  \"towel\",\n  \"tower\",\n  \"towns\",\n  \"toxic\",\n  \"trace\",\n  \"track\",\n  \"tract\",\n  \"trade\",\n  \"trail\",\n  \"train\",\n  \"trait\",\n  \"trans\",\n  \"traps\",\n  \"trash\",\n  \"treat\",\n  \"trees\",\n  \"trend\",\n  \"trial\",\n  \"tribe\",\n  \"trick\",\n  \"tried\",\n  \"tries\",\n  \"trips\",\n  \"trout\",\n  \"truck\",\n  \"truly\",\n  \"trump\",\n  \"trunk\",\n  \"trust\",\n  \"truth\",\n  \"tubes\",\n  \"tumor\",\n  \"tuned\",\n  \"tunes\",\n  \"turbo\",\n  \"turns\",\n  \"tutor\",\n  \"tweet\",\n  \"twice\",\n  \"twins\",\n  \"twist\",\n  \"types\",\n  \"tyres\",\n  \"ultra\",\n  \"uncle\",\n  \"under\",\n  \"union\",\n  \"unite\",\n  \"units\",\n  \"unity\",\n  \"until\",\n  \"upper\",\n  \"upset\",\n  \"urban\",\n  \"urged\",\n  \"urine\",\n  \"usage\",\n  \"users\",\n  \"using\",\n  \"usual\",\n  \"unsaw\",\n  \"unsay\",\n  \"unsee\",\n  \"unset\",\n  \"unsew\",\n  \"unsub\",\n  \"untag\",\n  \"untax\",\n  \"untie\",\n  \"until\",\n  \"unwed\",\n  \"unwet\",\n  \"unwit\",\n  \"unwon\",\n  \"unzip\",\n  \"upbow\",\n  \"upbye\",\n  \"updry\",\n  \"upend\",\n  \"upjet\",\n  \"uplay\",\n  \"upled\",\n  \"uplit\",\n  \"upped\",\n  \"upper\",\n  \"upran\",\n  \"uprun\",\n  \"upsee\",\n  \"upset\",\n  \"upsey\",\n  \"urban\",\n  \"ureal\",\n  \"urena\",\n  \"urged\",\n  \"urger\",\n  \"urges\",\n  \"urial\",\n  \"urine\",\n  \"vague\",\n  \"valid\",\n  \"value\",\n  \"valve\",\n  \"vapor\",\n  \"vault\",\n  \"vegan\",\n  \"veins\",\n  \"vents\",\n  \"venue\",\n  \"verse\",\n  \"video\",\n  \"views\",\n  \"villa\",\n  \"vinyl\",\n  \"viral\",\n  \"virus\",\n  \"visas\",\n  \"visit\",\n  \"vital\",\n  \"vivid\",\n  \"vocal\",\n  \"vodka\",\n  \"voice\",\n  \"volts\",\n  \"voted\",\n  \"voter\",\n  \"votes\",\n  \"verbs\",\n  \"verde\",\n  \"versa\",\n  \"verse\",\n  \"verso\",\n  \"verst\",\n  \"verte\",\n  \"verts\",\n  \"vespa\",\n  \"vests\",\n  \"vexed\",\n  \"vexer\",\n  \"vexes\",\n  \"vexil\",\n  \"vezir\",\n  \"vials\",\n  \"viand\",\n  \"vibed\",\n  \"vibes\",\n  \"vibey\",\n  \"vicar\",\n  \"vices\",\n  \"vichy\",\n  \"vicus\",\n  \"wages\",\n  \"wagon\",\n  \"waist\",\n  \"walks\",\n  \"walls\",\n  \"wants\",\n  \"warns\",\n  \"waste\",\n  \"watch\",\n  \"water\",\n  \"watts\",\n  \"waves\",\n  \"wears\",\n  \"weeds\",\n  \"weeks\",\n  \"weigh\",\n  \"weird\",\n  \"wells\",\n  \"welsh\",\n  \"whale\",\n  \"wheat\",\n  \"wheel\",\n  \"where\",\n  \"which\",\n  \"while\",\n  \"white\",\n  \"whole\",\n  \"whose\",\n  \"wider\",\n  \"widow\",\n  \"width\",\n  \"winds\",\n  \"wines\",\n  \"wings\",\n  \"wiped\",\n  \"wired\",\n  \"wires\",\n  \"witch\",\n  \"wives\",\n  \"woman\",\n  \"women\",\n  \"woods\",\n  \"words\",\n  \"works\",\n  \"world\",\n  \"worms\",\n  \"worry\",\n  \"worse\",\n  \"worst\",\n  \"worth\",\n  \"would\",\n  \"wound\",\n  \"wrath\",\n  \"wrist\",\n  \"write\",\n  \"wrong\",\n  \"wrote\",\n  \"waacs\",\n  \"wacke\",\n  \"wacko\",\n  \"wacks\",\n  \"wacky\",\n  \"wadds\",\n  \"waddy\",\n  \"waded\",\n  \"wader\",\n  \"wades\",\n  \"wadis\",\n  \"wafer\",\n  \"waffs\",\n  \"wafts\",\n  \"waged\",\n  \"wager\",\n  \"wagon\",\n  \"waifs\",\n  \"wails\",\n  \"wains\",\n  \"wairs\",\n  \"waist\",\n  \"waits\",\n  \"waive\",\n  \"wakas\",\n  \"waked\",\n  \"waken\",\n  \"waker\",\n  \"wakes\",\n  \"wakfs\",\n  \"waldo\",\n  \"walds\",\n  \"waled\",\n  \"waler\",\n  \"wales\",\n  \"walis\",\n  \"walks\",\n  \"walla\",\n  \"walls\",\n  \"wally\",\n  \"walty\",\n  \"waltz\",\n  \"wamed\",\n  \"wames\",\n  \"wamus\",\n  \"wands\",\n  \"wanes\",\n  \"waney\",\n  \"wangs\",\n  \"wanks\",\n  \"wanky\",\n  \"wanle\",\n  \"wanly\",\n  \"wanna\",\n  \"wants\",\n  \"xenon\",\n  \"xerox\",\n  \"yacht\",\n  \"yards\",\n  \"years\",\n  \"yeast\",\n  \"yield\",\n  \"young\",\n  \"yours\",\n  \"youth\",\n  \"yummy\",\n  \"yacca\",\n  \"yacht\",\n  \"yacka\",\n  \"yacks\",\n  \"yadda\",\n  \"yager\",\n  \"yahoo\",\n  \"yards\",\n  \"yarer\",\n  \"yarns\",\n  \"yawns\",\n  \"zones\",\n  \"zebra\",\n  \"zests\",\n  \"zesty\",\n  \"zines\",\n  \"zings\",\n  \"zingy\",\n  \"zinke\",\n  \"zinky\",\n  \"zippo\",\n  \"zippy\"\n]\n\nexport const words = unformatedWords.map(word => word.toUpperCase())\n\nexport const getRandomWord = () => {\n  const randomIndex = Math.floor(Math.random() * words.length);\n  return words[randomIndex];\n};","import { View, Text, StyleSheet, Dimensions, TouchableOpacity } from 'react-native'\nconst windowWidth = Dimensions.get('window').width;\n\nconst Header = ({startNewGame}) => {\n  const handlePress = () => {\n    startNewGame();\n  };\n  \n  return (\n    <View style={styles.header}>\n      <Text style={styles.headerText}>Boredle</Text>\n      <TouchableOpacity onPress={() => handlePress()}>\n        <Text style={styles.button}>\n          New Game\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header:{\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    width: \"100%\",\n    height: 50, \n    borderBottomWidth: .7,\n    borderBottomColor: \"#f2c41d\",\n    paddingBottom: 6,\n  },\n  headerText: {\n    fontSize: 22,\n    marginLeft: windowWidth < 500 ? 20 : 40, \n  },\n  button: {\n    marginRight: windowWidth < 500 ? 20 : 40, \n    fontSize: 14,\n    borderWidth: .5,\n    padding: 6,\n    borderColor: \"#4b7774\",\n    marginBottom: 3,\n  }\n});","import { View, Text, Modal, StyleSheet, TouchableOpacity } from 'react-native'\nimport React from 'react'\n\nconst ModalComponent = ({setKeyboardDisable, visibility, message, closeModal, startNewGame, win}) => {\n  const handlePress = () => {\n    closeModal();\n    setKeyboardDisable(false)\n    startNewGame();\n  };\n  \n  return (\n    <Modal visible ={visibility} animationType='slide'>\n      <View style={styles.contentContainer}>\n        <View style={styles.textContainer}>\n          <Text style ={styles.text}>{message[0]}</Text>\n          <Text style ={styles.text}>{message[1]}</Text>\n          <Text style ={styles.emoji}>{message[2]}</Text>\n        </View>\n        <TouchableOpacity onPress={() => handlePress()}>\n            <Text style={styles.modalButton}>\n              Let's Play Again\n            </Text>\n        </TouchableOpacity>\n      </View>\n    </Modal>\n  );\n};\n\nexport default ModalComponent;\n\nconst styles = StyleSheet.create({ \n  contentContainer: {\n    marginTop: \"20%\",\n    height: \"80%\",\n    width: \"80%\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    alignSelf: \"center\",\n    padding: 60,\n  },\n  textContainer:{\n    alignItems: 'center',\n  },\n  modalButton: {\n    fontWeight: 500,\n    color:'white',\n    backgroundColor: \"#4b7774\",\n    padding: 15,\n  },\n  text: {\n    fontSize: 18,\n    margin: 0,\n    width: \"100%\"\n  },\n  emoji: {\n    marginTop: 50,\n    fontSize: 48,\n  }\n});","import { useEffect } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst Toast = ({ message, visibility, setToastVisibility }) => {\n  useEffect(() => {\n    if (visibility) {\n      const timer = setTimeout(() => {\n        setToastVisibility(false);\n      }, 2000);\n\n      return () => clearTimeout(timer);\n    };\n  }, [visibility]);\n\n  if (!visibility) {\n    return null;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 1,\n    position: 'absolute',\n    top: 70,\n    left: 100,\n    right: 0,\n    backgroundColor: 'black',\n    padding: 10,\n    width: \"50%\",\n    alignSelf: \"center\",\n    justifyContent: 'center',\n    alignItems:'center',\n  },\n  message: {\n    color: 'white',\n  },\n});\n\nexport default Toast;\n","import { SafeAreaView, StyleSheet, Dimensions, View } from \"react-native\";\nimport { defaultState } from \"./deafultState\";\nimport Row from \"./Components/Row\";\nimport Keyboard from \"./Components/Keyboard\";\nimport { useState } from \"react\";\nimport { words, getRandomWord } from \"./words\";\nimport Header from \"./Components/Header\";\nimport ModalComponent from \"./Components/ModalComponent\";\nimport Toast from \"./Components/Toast\";\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function Page() {\n  const\n        // Basic Gameplay States\n        [boardState, setBoard]= useState(defaultState),\n        [currentWord, setWord] = useState(getRandomWord()),\n        [currentLetters, setLetters] = useState(currentWord.split('')),\n        [currentRow, setRow] = useState(1),\n        [currentSquare, setSquare] = useState({id: 10, value: '', status: \"inactive\", row: 1}),\n        [currentGuess, setGuess] = useState([]),\n        [guessedWords, setGuessedWords] = useState([]),\n\n        //Keyboard States\n        [guessedLetters, setGuessedLetters] = useState([]),\n        [correctLetters, setCorrectLetters] = useState([]),\n        [closeLetters, setCloseLetters] = useState([]),\n\n        //Display States\n        [modalVisible, setModalVisible] = useState(false),\n        [modalMessage, setModalMessage] = useState(\"\"),\n        [toastVisibility, setToastVisibility] = useState(false),\n        [toastMessage, setToastMessage] = useState(\"\"),\n        [disableKeyboard, setKeyboardDisable] = useState(false);\n  \n  //Atomic Functions\n  const checkForWin = () => {\n    return currentGuess.join(\"\") === currentLetters.join(\"\") ? true : false;\n  };\n\n  const checkForRealWord = (guess) => {\n    return words.some(word => word === guess) ? true : false;\n  };\n\n  const openModal = () => {\n    setModalVisible(true);\n  };\n\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n\n  const startNewGame = () => {\n    const newWord = getRandomWord();\n    setWord(newWord);\n    setLetters(newWord.split(\"\"));\n    setRow(1);\n    setSquare({id: 10, value: '', status: \"inactive\", row: 1});\n    setGuess([]);\n    setGuessedWords([])\n    setGuessedLetters([]);\n    setCloseLetters([]);\n    setCorrectLetters([])\n    setBoard([\n      {id: 10, status: \"inactive\", row: 1, value: \"\"},\n      {id: 11, status: \"inactive\", row: 1, value: \"\"},\n      {id: 12, status: \"inactive\", row: 1, value: \"\"},\n      {id: 13, status: \"inactive\", row: 1, value: \"\"},\n      {id: 14, status: \"inactive\", row: 1, value: \"\"},\n      {id: 20, status: \"inactive\", row: 2, value: \"\"},\n      {id: 21, status: \"inactive\", row: 2, value: \"\"},\n      {id: 22, status: \"inactive\", row: 2, value: \"\"},\n      {id: 23, status: \"inactive\", row: 2, value: \"\"},\n      {id: 24, status: \"inactive\", row: 2, value: \"\"},\n      {id: 30, status: \"inactive\", row: 3, value: \"\"},\n      {id: 31, status: \"inactive\", row: 3, value: \"\"},\n      {id: 32, status: \"inactive\", row: 3, value: \"\"},\n      {id: 33, status: \"inactive\", row: 3, value: \"\"},\n      {id: 34, status: \"inactive\", row: 3, value: \"\"},\n      {id: 40, status: \"inactive\", row: 4, value: \"\"},\n      {id: 41, status: \"inactive\", row: 4, value: \"\"},\n      {id: 42, status: \"inactive\", row: 4, value: \"\"},\n      {id: 43, status: \"inactive\", row: 4, value: \"\"},\n      {id: 44, status: \"inactive\", row: 4, value: \"\"},\n      {id: 50, status: \"inactive\", row: 5, value: \"\"},\n      {id: 51, status: \"inactive\", row: 5, value: \"\"},\n      {id: 52, status: \"inactive\", row: 5, value: \"\"},\n      {id: 53, status: \"inactive\", row: 5, value: \"\"},\n      {id: 54, status: \"inactive\", row: 5, value: \"\"},\n      {id: 60, status: \"inactive\", row: 6, value: \"\"},\n      {id: 61, status: \"inactive\", row: 6, value: \"\"},\n      {id: 62, status: \"inactive\", row: 6, value: \"\"},\n      {id: 63, status: \"inactive\", row: 6, value: \"\"},\n      {id: 64, status: \"inactive\", row: 6, value: \"\"},\n    ]);\n  };\n  \n  //Event Handlers\n  const updateGuess = (letter) => {\n    if(!disableKeyboard && currentGuess.length < 5) {\n      setGuess(previousState => [...previousState, letter]);\n      setBoard(previousState => {\n        return previousState.map(square => {\n          if (square.id === currentSquare.id) {\n            square.status = \"active\";\n            square.value = letter;\n            return square;\n          };\n          return square;\n        });\n      });\n\n      if (currentSquare.id % 10 !== 4) {\n        setSquare(previousState => boardState.find(square => square.id === previousState.id + 1));\n      } \n    };\n  };\n\n  const checkLetter = (state) => {\n    console.log(currentLetters, currentGuess);\n      return state.map(square => {\n\n        if (square.value === currentLetters[square.id % 10] \n          && currentRow === square.row) {\n            setCorrectLetters(previousState => [...previousState, square.value]);\n            square.status = 'correct';\n            return square;\n\n        } else if (\n          square.value !== currentLetters[square.id % 10]\n          && currentLetters.includes(square.value)\n          && currentRow === square.row) {\n            setCloseLetters(previousState => [...previousState, square.value]);\n            square.status = \"close\";\n            return square;\n\n        } else if (!currentLetters.includes(square.value)\n          && currentRow === square.row) {\n            square.status = \"incorrect\";\n            return square;\n\n        } else {\n          return square;\n        };\n    });\n  };\n\n  const submitGuess = () => {\n    if (!disableKeyboard) {\n      if(checkForWin()) {\n        setBoard(previousState => checkLetter(previousState))\n\n        const timer = setTimeout(() => {\n          openModal()\n          setModalMessage([`Congradulations`, `You Win!`, `🫡`])\n        }, 2000);\n\n        return () => clearTimeout(timer);\n  \n      } else if (currentGuess.length < 5) {\n        setToastVisibility(true)\n        setToastMessage(\"Guess was too short\")\n\n      } else if (!checkForRealWord(currentGuess.join(\"\"))) {\n        setToastVisibility(true);\n        setToastMessage(\"Not a valid word\");\n\n      } else if (guessedWords.includes(currentGuess.join(\"\"))) {\n        setToastVisibility(true);\n        setToastMessage(\"You already guessed that\");\n\n      } else {\n        setGuessedLetters(previousState => [...previousState, ...currentGuess]);\n        setGuessedWords(previousState => [...previousState, currentGuess.join(\"\")])\n        setGuess([]);\n        setBoard(previousState => checkLetter(previousState));\n        setRow(previousState => currentRow !== 6 ? previousState + 1 : previousState);\n        setSquare(boardState.find(square => square.id === (currentRow + 1) * 10));\n      \n        if (currentRow === 6) {\n          setKeyboardDisable(true)\n\n          const timer = setTimeout(() => {\n            openModal();\n            setModalMessage([`So close! The word was:`,  `${currentWord}`, '😔']);\n          }, 2000);\n\n          return () => clearTimeout(timer);\n        };\n      };\n    };\n  };\n\n  const backspace = () => {\n    if (currentSquare.id % 10 !== 0) {\n      setGuess(previousState => [...previousState.slice(0, -1)]);\n      const idToMatch = currentSquare.id % 10 === 4 \n                    && currentGuess.length === 5 ? \n                    currentSquare.id : currentSquare.id - 1;\n\n      setBoard(previousState => {\n        return previousState.map(square => {\n          if (square.id === idToMatch) {\n            square.value = \"\";\n            square.status = \"inactive\";\n            return square;\n          };\n          return square;\n        })\n      });\n      setSquare({id: idToMatch, value: \"\", status: \"inactive\", row: currentRow});\n    };\n  };\n\n  const accountForDoubles = (squares) => {\n    return squares.map(square => {\n      if (square.status === \"close\"\n          && squares.find(activeSquare => activeSquare.status === \"correct\"\n            && activeSquare.value === square.value)\n          && currentLetters.filter(letter => letter === square.value).length < 2\n      ) {\n        square.status = 'incorrect';\n        return square;\n      } else {\n        return square;\n      };\n    });\n  };\n\n    // Row Components\n    const boardRows = [1, 2 , 3, 4, 5, 6].map(number => {\n      return <Row\n                  squareData={boardState.filter(square => square.row === number)}\n                  accountForDoubles={accountForDoubles}\n                  key={number}\n              />;\n    });\n  \n\n  return (\n    <SafeAreaView style={styles.mainWrapper}>\n      <View style={styles.app}>\n        <Toast \n          message={toastMessage}\n          visibility={toastVisibility}\n          setToastVisibility={setToastVisibility}\n        />\n        <Header startNewGame={startNewGame}/>\n        <View style={styles.container}>\n          {boardRows}\n        </View>\n        <Keyboard\n          currentWord={currentWord}\n          guessedLetters={guessedLetters}\n          updateGuess={updateGuess}\n          submitGuess={submitGuess}\n          backspace={backspace}\n          disableKeyboard={disableKeyboard}\n          correctLetters={correctLetters}\n          closeLetters={closeLetters}\n        />\n        <ModalComponent\n          setKeyboardDisable={setKeyboardDisable}\n          startNewGame={startNewGame}\n          closeModal={closeModal}\n          visibility={modalVisible}\n          message={modalMessage}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  app: {\n    justifyContent: windowWidth < 500 ? \"space-between\" : \"space-between\",\n    alignItems:\"center\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  container: {\n    alignItems: \"center\",\n    padding: 0,\n  },\n  mainWrapper: {\n    width: '100%',\n    height: windowWidth < 500 ? \"100%\" : '90%',\n  }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [466], () => (__webpack_require__(9984)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["defaultState","id","status","row","value","windowWidth","Dimensions","get","width","_ref","squareStyles","styles","boardSquare","textStyles","squareText","push","activeText","activeBox","closeText","closeBox","correctText","correctBox","incorrectText","incorrectBox","inactiveText","inactiveBox","flattenedBoxStyles","StyleSheet","flatten","flattenedTextStyles","_jsx","View","style","children","Text","create","borderWidth","borderColor","height","margin","justifyContent","alignItems","color","fontSize","fontWeight","backgroundColor","squareData","squares","accountForDoubles","map","square","BoardSquare","flexDirection","keyboardContainer","keyRow","marginBottom","specialRow","button","marginHorizontal","padding","paddingTop","paddingBottom","borderRadius","buttonText","guessedText","specialButton","guessedLetterButton","closeLetterButton","correctLetterButton","disableKeyboard","updateGuess","submitGuess","backspace","guessedLetters","closeLetters","correctLetters","handleLetterKeyPress","letter","checkIfGuessed","includes","row1","keyStyle","textStyle","TouchableOpacity","onPress","row2","row3","specialButtonsStyle","_jsxs","words","word","toUpperCase","getRandomWord","randomIndex","Math","floor","random","length","startNewGame","header","headerText","borderBottomWidth","borderBottomColor","marginLeft","marginRight","setKeyboardDisable","visibility","message","closeModal","win","Modal","visible","animationType","contentContainer","textContainer","text","emoji","modalButton","marginTop","alignSelf","container","zIndex","position","top","left","right","setToastVisibility","useEffect","timer","setTimeout","clearTimeout","Page","_useState","useState","_useState2","_slicedToArray","boardState","setBoard","_useState3","_useState4","currentWord","setWord","_useState5","split","_useState6","currentLetters","setLetters","_useState7","_useState8","currentRow","setRow","_useState9","_useState10","currentSquare","setSquare","_useState11","_useState12","currentGuess","setGuess","_useState13","_useState14","guessedWords","setGuessedWords","_useState15","_useState16","setGuessedLetters","_useState17","_useState18","setCorrectLetters","_useState19","_useState20","setCloseLetters","_useState21","_useState22","modalVisible","setModalVisible","_useState23","_useState24","modalMessage","setModalMessage","_useState25","_useState26","toastVisibility","_useState27","_useState28","toastMessage","setToastMessage","_useState29","_useState30","openModal","newWord","checkLetter","state","console","log","previousState","concat","_toConsumableArray","find","activeSquare","filter","boardRows","number","Row","SafeAreaView","mainWrapper","app","Toast","Header","Keyboard","join","guess","some","slice","idToMatch","ModalComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}